{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AutoEncryptionLoggerLevel = exports.aws4 = exports.saslprep = exports.Snappy = exports.Kerberos = exports.PKG_VERSION = void 0;\n/* eslint-disable @typescript-eslint/no-var-requires */\n\nconst error_1 = require(\"./error\");\n\nconst utils_1 = require(\"./utils\");\n\nexports.PKG_VERSION = Symbol('kPkgVersion');\n\nfunction makeErrorModule(error) {\n  const props = error ? {\n    kModuleError: error\n  } : {};\n  return new Proxy(props, {\n    get: (_, key) => {\n      if (key === 'kModuleError') {\n        return error;\n      }\n\n      throw error;\n    },\n    set: () => {\n      throw error;\n    }\n  });\n}\n\nexports.Kerberos = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `kerberos` not found. Please install it to enable kerberos authentication'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.Kerberos = require('kerberos');\n} catch {} // eslint-disable-line\n\n\nexports.Snappy = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `snappy` not found. Please install it to enable snappy compression'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.Snappy = require('snappy');\n\n  try {\n    exports.Snappy[exports.PKG_VERSION] = utils_1.parsePackageVersion(require('snappy/package.json'));\n  } catch {} // eslint-disable-line\n\n} catch {} // eslint-disable-line\n\n\nexports.saslprep = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `saslprep` not found.' + ' Please install it to enable Stringprep Profile for User Names and Passwords'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.saslprep = require('saslprep');\n} catch {} // eslint-disable-line\n\n\nexports.aws4 = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `aws4` not found. Please install it to enable AWS authentication'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.aws4 = require('aws4');\n} catch {} // eslint-disable-line\n\n/** @public */\n\n\nexports.AutoEncryptionLoggerLevel = Object.freeze({\n  FatalError: 0,\n  Error: 1,\n  Warning: 2,\n  Info: 3,\n  Trace: 4\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","AutoEncryptionLoggerLevel","aws4","saslprep","Snappy","Kerberos","PKG_VERSION","error_1","require","utils_1","Symbol","makeErrorModule","error","props","kModuleError","Proxy","get","_","key","set","MongoMissingDependencyError","parsePackageVersion","freeze","FatalError","Error","Warning","Info","Trace"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/deps.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoEncryptionLoggerLevel = exports.aws4 = exports.saslprep = exports.Snappy = exports.Kerberos = exports.PKG_VERSION = void 0;\n/* eslint-disable @typescript-eslint/no-var-requires */\nconst error_1 = require(\"./error\");\nconst utils_1 = require(\"./utils\");\nexports.PKG_VERSION = Symbol('kPkgVersion');\nfunction makeErrorModule(error) {\n    const props = error ? { kModuleError: error } : {};\n    return new Proxy(props, {\n        get: (_, key) => {\n            if (key === 'kModuleError') {\n                return error;\n            }\n            throw error;\n        },\n        set: () => {\n            throw error;\n        }\n    });\n}\nexports.Kerberos = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `kerberos` not found. Please install it to enable kerberos authentication'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.Kerberos = require('kerberos');\n}\ncatch { } // eslint-disable-line\nexports.Snappy = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `snappy` not found. Please install it to enable snappy compression'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.Snappy = require('snappy');\n    try {\n        exports.Snappy[exports.PKG_VERSION] = utils_1.parsePackageVersion(require('snappy/package.json'));\n    }\n    catch { } // eslint-disable-line\n}\ncatch { } // eslint-disable-line\nexports.saslprep = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `saslprep` not found.' +\n    ' Please install it to enable Stringprep Profile for User Names and Passwords'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.saslprep = require('saslprep');\n}\ncatch { } // eslint-disable-line\nexports.aws4 = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `aws4` not found. Please install it to enable AWS authentication'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.aws4 = require('aws4');\n}\ncatch { } // eslint-disable-line\n/** @public */\nexports.AutoEncryptionLoggerLevel = Object.freeze({\n    FatalError: 0,\n    Error: 1,\n    Warning: 2,\n    Info: 3,\n    Trace: 4\n});\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,yBAAR,GAAoCF,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACI,QAAR,GAAmBJ,OAAO,CAACK,MAAR,GAAiBL,OAAO,CAACM,QAAR,GAAmBN,OAAO,CAACO,WAAR,GAAsB,KAAK,CAArI;AACA;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACAT,OAAO,CAACO,WAAR,GAAsBI,MAAM,CAAC,aAAD,CAA5B;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAC5B,MAAMC,KAAK,GAAGD,KAAK,GAAG;IAAEE,YAAY,EAAEF;EAAhB,CAAH,GAA6B,EAAhD;EACA,OAAO,IAAIG,KAAJ,CAAUF,KAAV,EAAiB;IACpBG,GAAG,EAAE,CAACC,CAAD,EAAIC,GAAJ,KAAY;MACb,IAAIA,GAAG,KAAK,cAAZ,EAA4B;QACxB,OAAON,KAAP;MACH;;MACD,MAAMA,KAAN;IACH,CANmB;IAOpBO,GAAG,EAAE,MAAM;MACP,MAAMP,KAAN;IACH;EATmB,CAAjB,CAAP;AAWH;;AACDb,OAAO,CAACM,QAAR,GAAmBM,eAAe,CAAC,IAAIJ,OAAO,CAACa,2BAAZ,CAAwC,2FAAxC,CAAD,CAAlC;;AACA,IAAI;EACA;EACArB,OAAO,CAACM,QAAR,GAAmBG,OAAO,CAAC,UAAD,CAA1B;AACH,CAHD,CAIA,MAAM,CAAG,C,CAAC;;;AACVT,OAAO,CAACK,MAAR,GAAiBO,eAAe,CAAC,IAAIJ,OAAO,CAACa,2BAAZ,CAAwC,oFAAxC,CAAD,CAAhC;;AACA,IAAI;EACA;EACArB,OAAO,CAACK,MAAR,GAAiBI,OAAO,CAAC,QAAD,CAAxB;;EACA,IAAI;IACAT,OAAO,CAACK,MAAR,CAAeL,OAAO,CAACO,WAAvB,IAAsCG,OAAO,CAACY,mBAAR,CAA4Bb,OAAO,CAAC,qBAAD,CAAnC,CAAtC;EACH,CAFD,CAGA,MAAM,CAAG,CANT,CAMU;;AACb,CAPD,CAQA,MAAM,CAAG,C,CAAC;;;AACVT,OAAO,CAACI,QAAR,GAAmBQ,eAAe,CAAC,IAAIJ,OAAO,CAACa,2BAAZ,CAAwC,0CACvE,8EAD+B,CAAD,CAAlC;;AAEA,IAAI;EACA;EACArB,OAAO,CAACI,QAAR,GAAmBK,OAAO,CAAC,UAAD,CAA1B;AACH,CAHD,CAIA,MAAM,CAAG,C,CAAC;;;AACVT,OAAO,CAACG,IAAR,GAAeS,eAAe,CAAC,IAAIJ,OAAO,CAACa,2BAAZ,CAAwC,kFAAxC,CAAD,CAA9B;;AACA,IAAI;EACA;EACArB,OAAO,CAACG,IAAR,GAAeM,OAAO,CAAC,MAAD,CAAtB;AACH,CAHD,CAIA,MAAM,CAAG,C,CAAC;;AACV;;;AACAT,OAAO,CAACE,yBAAR,GAAoCJ,MAAM,CAACyB,MAAP,CAAc;EAC9CC,UAAU,EAAE,CADkC;EAE9CC,KAAK,EAAE,CAFuC;EAG9CC,OAAO,EAAE,CAHqC;EAI9CC,IAAI,EAAE,CAJwC;EAK9CC,KAAK,EAAE;AALuC,CAAd,CAApC"},"metadata":{},"sourceType":"script"}