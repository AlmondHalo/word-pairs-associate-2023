{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DistinctOperation = void 0;\n\nconst operation_1 = require(\"./operation\");\n\nconst command_1 = require(\"./command\");\n\nconst utils_1 = require(\"../utils\");\n\nconst error_1 = require(\"../error\");\n/**\n * Return a list of distinct values for the given key across a collection.\n * @internal\n */\n\n\nclass DistinctOperation extends command_1.CommandOperation {\n  /**\n   * Construct a Distinct operation.\n   *\n   * @param collection - Collection instance.\n   * @param key - Field of the document to find distinct values for.\n   * @param query - The query for filtering the set of documents to which we apply the distinct filter.\n   * @param options - Optional settings. See Collection.prototype.distinct for a list of options.\n   */\n  constructor(collection, key, query, options) {\n    super(collection, options);\n    this.options = options !== null && options !== void 0 ? options : {};\n    this.collection = collection;\n    this.key = key;\n    this.query = query;\n  }\n\n  execute(server, session, callback) {\n    const coll = this.collection;\n    const key = this.key;\n    const query = this.query;\n    const options = this.options; // Distinct command\n\n    const cmd = {\n      distinct: coll.collectionName,\n      key: key,\n      query: query\n    }; // Add maxTimeMS if defined\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    } // Do we have a readConcern specified\n\n\n    utils_1.decorateWithReadConcern(cmd, coll, options); // Have we specified collation\n\n    try {\n      utils_1.decorateWithCollation(cmd, coll, options);\n    } catch (err) {\n      return callback(err);\n    }\n\n    if (this.explain && utils_1.maxWireVersion(server) < 4) {\n      callback(new error_1.MongoCompatibilityError(`Server ${server.name} does not support explain on distinct`));\n      return;\n    }\n\n    super.executeCommand(server, session, cmd, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, this.explain ? result : result.values);\n    });\n  }\n\n}\n\nexports.DistinctOperation = DistinctOperation;\noperation_1.defineAspects(DistinctOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.EXPLAINABLE]);","map":{"version":3,"names":["Object","defineProperty","exports","value","DistinctOperation","operation_1","require","command_1","utils_1","error_1","CommandOperation","constructor","collection","key","query","options","execute","server","session","callback","coll","cmd","distinct","collectionName","maxTimeMS","decorateWithReadConcern","decorateWithCollation","err","explain","maxWireVersion","MongoCompatibilityError","name","executeCommand","result","undefined","values","defineAspects","Aspect","READ_OPERATION","RETRYABLE","EXPLAINABLE"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/operations/distinct.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DistinctOperation = void 0;\nconst operation_1 = require(\"./operation\");\nconst command_1 = require(\"./command\");\nconst utils_1 = require(\"../utils\");\nconst error_1 = require(\"../error\");\n/**\n * Return a list of distinct values for the given key across a collection.\n * @internal\n */\nclass DistinctOperation extends command_1.CommandOperation {\n    /**\n     * Construct a Distinct operation.\n     *\n     * @param collection - Collection instance.\n     * @param key - Field of the document to find distinct values for.\n     * @param query - The query for filtering the set of documents to which we apply the distinct filter.\n     * @param options - Optional settings. See Collection.prototype.distinct for a list of options.\n     */\n    constructor(collection, key, query, options) {\n        super(collection, options);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.collection = collection;\n        this.key = key;\n        this.query = query;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        const key = this.key;\n        const query = this.query;\n        const options = this.options;\n        // Distinct command\n        const cmd = {\n            distinct: coll.collectionName,\n            key: key,\n            query: query\n        };\n        // Add maxTimeMS if defined\n        if (typeof options.maxTimeMS === 'number') {\n            cmd.maxTimeMS = options.maxTimeMS;\n        }\n        // Do we have a readConcern specified\n        utils_1.decorateWithReadConcern(cmd, coll, options);\n        // Have we specified collation\n        try {\n            utils_1.decorateWithCollation(cmd, coll, options);\n        }\n        catch (err) {\n            return callback(err);\n        }\n        if (this.explain && utils_1.maxWireVersion(server) < 4) {\n            callback(new error_1.MongoCompatibilityError(`Server ${server.name} does not support explain on distinct`));\n            return;\n        }\n        super.executeCommand(server, session, cmd, (err, result) => {\n            if (err) {\n                callback(err);\n                return;\n            }\n            callback(undefined, this.explain ? result : result.values);\n        });\n    }\n}\nexports.DistinctOperation = DistinctOperation;\noperation_1.defineAspects(DistinctOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.EXPLAINABLE]);\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,UAAD,CAAvB;AACA;AACA;AACA;AACA;;;AACA,MAAMF,iBAAN,SAAgCG,SAAS,CAACG,gBAA1C,CAA2D;EACvD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,WAAW,CAACC,UAAD,EAAaC,GAAb,EAAkBC,KAAlB,EAAyBC,OAAzB,EAAkC;IACzC,MAAMH,UAAN,EAAkBG,OAAlB;IACA,KAAKA,OAAL,GAAeA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyCA,OAAzC,GAAmD,EAAlE;IACA,KAAKH,UAAL,GAAkBA,UAAlB;IACA,KAAKC,GAAL,GAAWA,GAAX;IACA,KAAKC,KAAL,GAAaA,KAAb;EACH;;EACDE,OAAO,CAACC,MAAD,EAASC,OAAT,EAAkBC,QAAlB,EAA4B;IAC/B,MAAMC,IAAI,GAAG,KAAKR,UAAlB;IACA,MAAMC,GAAG,GAAG,KAAKA,GAAjB;IACA,MAAMC,KAAK,GAAG,KAAKA,KAAnB;IACA,MAAMC,OAAO,GAAG,KAAKA,OAArB,CAJ+B,CAK/B;;IACA,MAAMM,GAAG,GAAG;MACRC,QAAQ,EAAEF,IAAI,CAACG,cADP;MAERV,GAAG,EAAEA,GAFG;MAGRC,KAAK,EAAEA;IAHC,CAAZ,CAN+B,CAW/B;;IACA,IAAI,OAAOC,OAAO,CAACS,SAAf,KAA6B,QAAjC,EAA2C;MACvCH,GAAG,CAACG,SAAJ,GAAgBT,OAAO,CAACS,SAAxB;IACH,CAd8B,CAe/B;;;IACAhB,OAAO,CAACiB,uBAAR,CAAgCJ,GAAhC,EAAqCD,IAArC,EAA2CL,OAA3C,EAhB+B,CAiB/B;;IACA,IAAI;MACAP,OAAO,CAACkB,qBAAR,CAA8BL,GAA9B,EAAmCD,IAAnC,EAAyCL,OAAzC;IACH,CAFD,CAGA,OAAOY,GAAP,EAAY;MACR,OAAOR,QAAQ,CAACQ,GAAD,CAAf;IACH;;IACD,IAAI,KAAKC,OAAL,IAAgBpB,OAAO,CAACqB,cAAR,CAAuBZ,MAAvB,IAAiC,CAArD,EAAwD;MACpDE,QAAQ,CAAC,IAAIV,OAAO,CAACqB,uBAAZ,CAAqC,UAASb,MAAM,CAACc,IAAK,uCAA1D,CAAD,CAAR;MACA;IACH;;IACD,MAAMC,cAAN,CAAqBf,MAArB,EAA6BC,OAA7B,EAAsCG,GAAtC,EAA2C,CAACM,GAAD,EAAMM,MAAN,KAAiB;MACxD,IAAIN,GAAJ,EAAS;QACLR,QAAQ,CAACQ,GAAD,CAAR;QACA;MACH;;MACDR,QAAQ,CAACe,SAAD,EAAY,KAAKN,OAAL,GAAeK,MAAf,GAAwBA,MAAM,CAACE,MAA3C,CAAR;IACH,CAND;EAOH;;AAnDsD;;AAqD3DjC,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;AACAC,WAAW,CAAC+B,aAAZ,CAA0BhC,iBAA1B,EAA6C,CAACC,WAAW,CAACgC,MAAZ,CAAmBC,cAApB,EAAoCjC,WAAW,CAACgC,MAAZ,CAAmBE,SAAvD,EAAkElC,WAAW,CAACgC,MAAZ,CAAmBG,WAArF,CAA7C"},"metadata":{},"sourceType":"script"}