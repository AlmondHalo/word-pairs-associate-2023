{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthProvider = exports.AuthContext = void 0;\n\nconst error_1 = require(\"../../error\");\n/** Context used during authentication */\n\n\nclass AuthContext {\n  constructor(connection, credentials, options) {\n    this.connection = connection;\n    this.credentials = credentials;\n    this.options = options;\n  }\n\n}\n\nexports.AuthContext = AuthContext;\n\nclass AuthProvider {\n  /**\n   * Prepare the handshake document before the initial handshake.\n   *\n   * @param handshakeDoc - The document used for the initial handshake on a connection\n   * @param authContext - Context for authentication flow\n   */\n  prepare(handshakeDoc, authContext, callback) {\n    callback(undefined, handshakeDoc);\n  }\n  /**\n   * Authenticate\n   *\n   * @param context - A shared context for authentication flow\n   * @param callback - The callback to return the result from the authentication\n   */\n\n\n  auth(context, callback) {\n    // TODO(NODE-3483): Replace this with MongoMethodOverrideError\n    callback(new error_1.MongoRuntimeError('`auth` method must be overridden by subclass'));\n  }\n\n}\n\nexports.AuthProvider = AuthProvider;","map":{"version":3,"names":["Object","defineProperty","exports","value","AuthProvider","AuthContext","error_1","require","constructor","connection","credentials","options","prepare","handshakeDoc","authContext","callback","undefined","auth","context","MongoRuntimeError"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/cmap/auth/auth_provider.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthProvider = exports.AuthContext = void 0;\nconst error_1 = require(\"../../error\");\n/** Context used during authentication */\nclass AuthContext {\n    constructor(connection, credentials, options) {\n        this.connection = connection;\n        this.credentials = credentials;\n        this.options = options;\n    }\n}\nexports.AuthContext = AuthContext;\nclass AuthProvider {\n    /**\n     * Prepare the handshake document before the initial handshake.\n     *\n     * @param handshakeDoc - The document used for the initial handshake on a connection\n     * @param authContext - Context for authentication flow\n     */\n    prepare(handshakeDoc, authContext, callback) {\n        callback(undefined, handshakeDoc);\n    }\n    /**\n     * Authenticate\n     *\n     * @param context - A shared context for authentication flow\n     * @param callback - The callback to return the result from the authentication\n     */\n    auth(context, callback) {\n        // TODO(NODE-3483): Replace this with MongoMethodOverrideError\n        callback(new error_1.MongoRuntimeError('`auth` method must be overridden by subclass'));\n    }\n}\nexports.AuthProvider = AuthProvider;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,WAAR,GAAsB,KAAK,CAAlD;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,aAAD,CAAvB;AACA;;;AACA,MAAMF,WAAN,CAAkB;EACdG,WAAW,CAACC,UAAD,EAAaC,WAAb,EAA0BC,OAA1B,EAAmC;IAC1C,KAAKF,UAAL,GAAkBA,UAAlB;IACA,KAAKC,WAAL,GAAmBA,WAAnB;IACA,KAAKC,OAAL,GAAeA,OAAf;EACH;;AALa;;AAOlBT,OAAO,CAACG,WAAR,GAAsBA,WAAtB;;AACA,MAAMD,YAAN,CAAmB;EACf;AACJ;AACA;AACA;AACA;AACA;EACIQ,OAAO,CAACC,YAAD,EAAeC,WAAf,EAA4BC,QAA5B,EAAsC;IACzCA,QAAQ,CAACC,SAAD,EAAYH,YAAZ,CAAR;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACII,IAAI,CAACC,OAAD,EAAUH,QAAV,EAAoB;IACpB;IACAA,QAAQ,CAAC,IAAIT,OAAO,CAACa,iBAAZ,CAA8B,8CAA9B,CAAD,CAAR;EACH;;AAnBc;;AAqBnBjB,OAAO,CAACE,YAAR,GAAuBA,YAAvB"},"metadata":{},"sourceType":"script"}