{"ast":null,"code":"import { WordDirective } from '../word.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../word.directive\";\n\nfunction WordAssociateComponent_ng_template_1_Template(rf, ctx) {}\n\nconst _c0 = function () {\n  return [\"/task-message\"];\n};\n\nexport let WordAssociateComponent = /*#__PURE__*/(() => {\n  class WordAssociateComponent {\n    constructor() {\n      this.words = [];\n      this.nextClick = true;\n      this.currentAdIndex = -1;\n      this.counter = 0;\n    }\n\n    ngOnInit() {\n      this.loadComponent();\n      this.getWordsOne();\n    }\n\n    ngOnDestroy() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n\n    loadComponent() {\n      if (this.counter < this.words.length) {\n        this.currentAdIndex = (this.currentAdIndex + 1) % this.words.length;\n        const addWord = this.words[this.currentAdIndex];\n        const viewContainerRef = this.wordHost.viewContainerRef;\n        viewContainerRef.clear();\n        const componentRef = viewContainerRef.createComponent(addWord.component);\n        componentRef.instance.data = addWord.data;\n        this.counter++;\n\n        if (this.counter == this.words.length) {\n          this.nextClick = false;\n          console.log(\"button\", this.nextClick);\n        }\n      } else {\n        return;\n      }\n    }\n\n    getWordsOne() {\n      this.interval = window.setInterval(() => {\n        this.loadComponent();\n      }, 3000);\n    }\n\n  }\n\n  WordAssociateComponent.ɵfac = function WordAssociateComponent_Factory(t) {\n    return new (t || WordAssociateComponent)();\n  };\n\n  WordAssociateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WordAssociateComponent,\n    selectors: [[\"app-word-associate\"]],\n    viewQuery: function WordAssociateComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(WordDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wordHost = _t.first);\n      }\n    },\n    inputs: {\n      words: \"words\"\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"word-class\"], [\"wordHost\", \"\"], [1, \"a-bunch-of-styles-for-my-button\"], [\"href\", \"\", 1, \"more-styles\", 3, \"disabled\", \"routerLink\"]],\n    template: function WordAssociateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, WordAssociateComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"button\", 3);\n        i0.ɵɵtext(4, \"Next\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.nextClick)(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      }\n    },\n    dependencies: [i1.RouterLink, i2.WordDirective],\n    encapsulation: 2\n  });\n  return WordAssociateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}