{"ast":null,"code":"import { FormBuilder, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../disable-on-enter.directive\";\nexport let WordListInputOneComponent = /*#__PURE__*/(() => {\n  class WordListInputOneComponent {\n    constructor(myForm) {\n      this.myForm = myForm;\n      this.wordsInput = [];\n      this.listOfInputs = [];\n      this.currentAdIndex = -1;\n      this.myWord = '';\n      this.myuserInput = '';\n      this.correctWord = '';\n      this.errorMessage = '';\n      this.multiSelect = true; //@ViewChild('userInput') userInput!: ElementRef ;\n      //@ViewChild('userInputs', {static: true}) usernameElement: ElementRef;\n\n      this.userInputs = \"\";\n    } //@ViewChild('entry') entry: ElementRef | undefined;\n\n\n    ngOnInit() {\n      this.inputForm = this.myForm.group({\n        userInputs: ''\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n      /*if (this.interval) {\n        clearInterval(this.interval);\n      }*/\n\n    }\n    /*onEnter(e: { stopPropagation: () => void; preventDefault: () => void; }) {\n      this.userInput.nativeElement.focus();\n      e.stopPropagation();\n      e.preventDefault();\n      console.log('click inside input');\n      this.onSubmit(this.data.listonesec,this.data.userInputs);\n      console.log(\"User Input \", this.data.userInputs);\n      return false;\n    }*/\n    //Funtion with condition for different scenarios\n\n\n    onEnter(myWord, myuserInput) {\n      console.log(\"User Input \", myuserInput);\n      console.log(\"right answer is \", myWord); // Test wheter myuserInput is empty, but not None \n\n      if (myuserInput === '') {\n        this.errorMessage = \"The correct word is \" + myWord;\n        console.log(this.multiSelect = false); //return this.multiSelect = false;\n        //confirm(\"The correct word is !\"+myWord);\n        //this.message.style.color = \"red\"\n        //alert(\"The correct word is \" + myWord);\n        // Information\n\n        /*Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Nothing to copy!'\n        })\n        // this.getWordsInputOne();\n        }*/\n        // Test whether strValue is empty or is None\n\n        /* if (strValue) {\n           //do something*/\n      } else if (myuserInput != myWord) {\n        this.errorMessage = \"INCORRECT!, not \" + \"'\" + myuserInput + \"'\" + \", the correct word is \" + myWord;\n        console.log(this.multiSelect = false); //return this.multiSelect = false;\n        //alert(\"Not \" + myuserInput + \", the correct word is \" + myWord);\n        //this.getWordsInputOne();\n      } else if (myWord === myuserInput) {\n        this.correctWord = \"Correct answer\";\n        console.log(this.multiSelect); //return this.multiSelect = true;\n        //alert(\"Correct answer\"); \n        //this.getWordsInputOne();\n      } //console.log(this.multiSelect);\n\n\n      console.log(\"We are at the end of the list\", this.wordsInput.length);\n      /**else if(userInput === this.empty || myWord != userInput){\n             alert(\"Wrong word, the correct word is \" + myWord);\n        //return myWord;\n        //console.log(\"the right wordis \", myWord);\n      } */\n      //this.getWordsInputOne();\n      //return setInterval(onEnter(), 1000);\n      //this.getWordsInput();\n\n      console.log(\"The intervale is \", this.interval);\n      console.log(\"Finding the lenght \", this.myWord.length); //this.getWordsInputOne();\n\n      console.log(\"Here is my boolena answer \", this.multiSelect);\n      return this.multiSelect;\n    }\n\n    //Populate array with input values\n    //Find the lenght of myWord\n    getWordsInputOne() {\n      this.interval = window.setInterval(() => {\n        this.onEnter(this.myWord, this.myuserInput);\n      }, 1000);\n    }\n\n  }\n\n  WordListInputOneComponent.ɵfac = function WordListInputOneComponent_Factory(t) {\n    return new (t || WordListInputOneComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  WordListInputOneComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WordListInputOneComponent,\n    selectors: [[\"app-word-list-input-one\"]],\n    inputs: {\n      wordsInput: \"wordsInput\",\n      data: \"data\"\n    },\n    decls: 15,\n    vars: 5,\n    consts: [[1, \"form-match\", 3, \"formGroup\"], [1, \"message\"], [\"disable-on-enter\", \"\", \"id\", \"userInputs\", \"type\", \"text\", \"name\", \"userInputs\", 3, \"keyup.enter\", \"click\"], [\"userInputs\", \"\"], [1, \"outputMessage\", 2, \"color\", \"red\", \"text-align\", \"center\"], [1, \"correctMessage\", 2, \"color\", \"blue\", \"text-align\", \"center\"]],\n    template: function WordListInputOneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"word-list-input-one works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"label\", 1);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 2, 3);\n        i0.ɵɵlistener(\"keyup.enter\", function WordListInputOneComponent_Template_input_keyup_enter_5_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(6);\n\n          return i0.ɵɵresetView(ctx.onEnter(ctx.data.listonesec, _r0.value));\n        })(\"click\", function WordListInputOneComponent_Template_input_click_5_listener($event) {\n          return $event.stopPropagation();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"span\", 4)(8, \"div\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"span\", 5)(11, \"div\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"label\", 1);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.inputForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.data.listone, \" - \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.errorMessage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.correctWord);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.data.listonesec, \" - \");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.DisableOnEnterDirective],\n    encapsulation: 2\n  });\n  return WordListInputOneComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}