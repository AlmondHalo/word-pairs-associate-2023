{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Explain = exports.ExplainVerbosity = void 0;\n\nconst error_1 = require(\"./error\");\n/** @public */\n\n\nexports.ExplainVerbosity = Object.freeze({\n  queryPlanner: 'queryPlanner',\n  queryPlannerExtended: 'queryPlannerExtended',\n  executionStats: 'executionStats',\n  allPlansExecution: 'allPlansExecution'\n});\n/** @internal */\n\nclass Explain {\n  constructor(verbosity) {\n    if (typeof verbosity === 'boolean') {\n      this.verbosity = verbosity ? exports.ExplainVerbosity.allPlansExecution : exports.ExplainVerbosity.queryPlanner;\n    } else {\n      this.verbosity = verbosity;\n    }\n  }\n\n  static fromOptions(options) {\n    if ((options === null || options === void 0 ? void 0 : options.explain) == null) return;\n    const explain = options.explain;\n\n    if (typeof explain === 'boolean' || typeof explain === 'string') {\n      return new Explain(explain);\n    }\n\n    throw new error_1.MongoInvalidArgumentError('Field \"explain\" must be a string or a boolean');\n  }\n\n}\n\nexports.Explain = Explain;","map":{"version":3,"names":["Object","defineProperty","exports","value","Explain","ExplainVerbosity","error_1","require","freeze","queryPlanner","queryPlannerExtended","executionStats","allPlansExecution","constructor","verbosity","fromOptions","options","explain","MongoInvalidArgumentError"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/explain.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Explain = exports.ExplainVerbosity = void 0;\nconst error_1 = require(\"./error\");\n/** @public */\nexports.ExplainVerbosity = Object.freeze({\n    queryPlanner: 'queryPlanner',\n    queryPlannerExtended: 'queryPlannerExtended',\n    executionStats: 'executionStats',\n    allPlansExecution: 'allPlansExecution'\n});\n/** @internal */\nclass Explain {\n    constructor(verbosity) {\n        if (typeof verbosity === 'boolean') {\n            this.verbosity = verbosity\n                ? exports.ExplainVerbosity.allPlansExecution\n                : exports.ExplainVerbosity.queryPlanner;\n        }\n        else {\n            this.verbosity = verbosity;\n        }\n    }\n    static fromOptions(options) {\n        if ((options === null || options === void 0 ? void 0 : options.explain) == null)\n            return;\n        const explain = options.explain;\n        if (typeof explain === 'boolean' || typeof explain === 'string') {\n            return new Explain(explain);\n        }\n        throw new error_1.MongoInvalidArgumentError('Field \"explain\" must be a string or a boolean');\n    }\n}\nexports.Explain = Explain;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,gBAAR,GAA2B,KAAK,CAAlD;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;AACA;;;AACAL,OAAO,CAACG,gBAAR,GAA2BL,MAAM,CAACQ,MAAP,CAAc;EACrCC,YAAY,EAAE,cADuB;EAErCC,oBAAoB,EAAE,sBAFe;EAGrCC,cAAc,EAAE,gBAHqB;EAIrCC,iBAAiB,EAAE;AAJkB,CAAd,CAA3B;AAMA;;AACA,MAAMR,OAAN,CAAc;EACVS,WAAW,CAACC,SAAD,EAAY;IACnB,IAAI,OAAOA,SAAP,KAAqB,SAAzB,EAAoC;MAChC,KAAKA,SAAL,GAAiBA,SAAS,GACpBZ,OAAO,CAACG,gBAAR,CAAyBO,iBADL,GAEpBV,OAAO,CAACG,gBAAR,CAAyBI,YAF/B;IAGH,CAJD,MAKK;MACD,KAAKK,SAAL,GAAiBA,SAAjB;IACH;EACJ;;EACiB,OAAXC,WAAW,CAACC,OAAD,EAAU;IACxB,IAAI,CAACA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACC,OAA3D,KAAuE,IAA3E,EACI;IACJ,MAAMA,OAAO,GAAGD,OAAO,CAACC,OAAxB;;IACA,IAAI,OAAOA,OAAP,KAAmB,SAAnB,IAAgC,OAAOA,OAAP,KAAmB,QAAvD,EAAiE;MAC7D,OAAO,IAAIb,OAAJ,CAAYa,OAAZ,CAAP;IACH;;IACD,MAAM,IAAIX,OAAO,CAACY,yBAAZ,CAAsC,+CAAtC,CAAN;EACH;;AAnBS;;AAqBdhB,OAAO,CAACE,OAAR,GAAkBA,OAAlB"},"metadata":{},"sourceType":"script"}