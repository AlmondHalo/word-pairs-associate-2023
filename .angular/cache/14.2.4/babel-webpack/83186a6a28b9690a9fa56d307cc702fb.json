{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectionPoolClearedEvent = exports.ConnectionCheckedInEvent = exports.ConnectionCheckedOutEvent = exports.ConnectionCheckOutFailedEvent = exports.ConnectionCheckOutStartedEvent = exports.ConnectionClosedEvent = exports.ConnectionReadyEvent = exports.ConnectionCreatedEvent = exports.ConnectionPoolClosedEvent = exports.ConnectionPoolCreatedEvent = exports.ConnectionPoolMonitoringEvent = void 0;\n/**\n * The base export class for all monitoring events published from the connection pool\n * @public\n * @category Event\n */\n\nclass ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool) {\n    this.time = new Date();\n    this.address = pool.address;\n  }\n\n}\n\nexports.ConnectionPoolMonitoringEvent = ConnectionPoolMonitoringEvent;\n/**\n * An event published when a connection pool is created\n * @public\n * @category Event\n */\n\nclass ConnectionPoolCreatedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool) {\n    super(pool);\n    this.options = pool.options;\n  }\n\n}\n\nexports.ConnectionPoolCreatedEvent = ConnectionPoolCreatedEvent;\n/**\n * An event published when a connection pool is closed\n * @public\n * @category Event\n */\n\nclass ConnectionPoolClosedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool) {\n    super(pool);\n  }\n\n}\n\nexports.ConnectionPoolClosedEvent = ConnectionPoolClosedEvent;\n/**\n * An event published when a connection pool creates a new connection\n * @public\n * @category Event\n */\n\nclass ConnectionCreatedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n\n}\n\nexports.ConnectionCreatedEvent = ConnectionCreatedEvent;\n/**\n * An event published when a connection is ready for use\n * @public\n * @category Event\n */\n\nclass ConnectionReadyEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n\n}\n\nexports.ConnectionReadyEvent = ConnectionReadyEvent;\n/**\n * An event published when a connection is closed\n * @public\n * @category Event\n */\n\nclass ConnectionClosedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, connection, reason) {\n    super(pool);\n    this.connectionId = connection.id;\n    this.reason = reason || 'unknown';\n    this.serviceId = connection.serviceId;\n  }\n\n}\n\nexports.ConnectionClosedEvent = ConnectionClosedEvent;\n/**\n * An event published when a request to check a connection out begins\n * @public\n * @category Event\n */\n\nclass ConnectionCheckOutStartedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool) {\n    super(pool);\n  }\n\n}\n\nexports.ConnectionCheckOutStartedEvent = ConnectionCheckOutStartedEvent;\n/**\n * An event published when a request to check a connection out fails\n * @public\n * @category Event\n */\n\nclass ConnectionCheckOutFailedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, reason) {\n    super(pool);\n    this.reason = reason;\n  }\n\n}\n\nexports.ConnectionCheckOutFailedEvent = ConnectionCheckOutFailedEvent;\n/**\n * An event published when a connection is checked out of the connection pool\n * @public\n * @category Event\n */\n\nclass ConnectionCheckedOutEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n\n}\n\nexports.ConnectionCheckedOutEvent = ConnectionCheckedOutEvent;\n/**\n * An event published when a connection is checked into the connection pool\n * @public\n * @category Event\n */\n\nclass ConnectionCheckedInEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n\n}\n\nexports.ConnectionCheckedInEvent = ConnectionCheckedInEvent;\n/**\n * An event published when a connection pool is cleared\n * @public\n * @category Event\n */\n\nclass ConnectionPoolClearedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, serviceId) {\n    super(pool);\n    this.serviceId = serviceId;\n  }\n\n}\n\nexports.ConnectionPoolClearedEvent = ConnectionPoolClearedEvent;","map":{"version":3,"names":["Object","defineProperty","exports","value","ConnectionPoolClearedEvent","ConnectionCheckedInEvent","ConnectionCheckedOutEvent","ConnectionCheckOutFailedEvent","ConnectionCheckOutStartedEvent","ConnectionClosedEvent","ConnectionReadyEvent","ConnectionCreatedEvent","ConnectionPoolClosedEvent","ConnectionPoolCreatedEvent","ConnectionPoolMonitoringEvent","constructor","pool","time","Date","address","options","connection","connectionId","id","reason","serviceId"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/cmap/connection_pool_events.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionPoolClearedEvent = exports.ConnectionCheckedInEvent = exports.ConnectionCheckedOutEvent = exports.ConnectionCheckOutFailedEvent = exports.ConnectionCheckOutStartedEvent = exports.ConnectionClosedEvent = exports.ConnectionReadyEvent = exports.ConnectionCreatedEvent = exports.ConnectionPoolClosedEvent = exports.ConnectionPoolCreatedEvent = exports.ConnectionPoolMonitoringEvent = void 0;\n/**\n * The base export class for all monitoring events published from the connection pool\n * @public\n * @category Event\n */\nclass ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        this.time = new Date();\n        this.address = pool.address;\n    }\n}\nexports.ConnectionPoolMonitoringEvent = ConnectionPoolMonitoringEvent;\n/**\n * An event published when a connection pool is created\n * @public\n * @category Event\n */\nclass ConnectionPoolCreatedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        super(pool);\n        this.options = pool.options;\n    }\n}\nexports.ConnectionPoolCreatedEvent = ConnectionPoolCreatedEvent;\n/**\n * An event published when a connection pool is closed\n * @public\n * @category Event\n */\nclass ConnectionPoolClosedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        super(pool);\n    }\n}\nexports.ConnectionPoolClosedEvent = ConnectionPoolClosedEvent;\n/**\n * An event published when a connection pool creates a new connection\n * @public\n * @category Event\n */\nclass ConnectionCreatedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionCreatedEvent = ConnectionCreatedEvent;\n/**\n * An event published when a connection is ready for use\n * @public\n * @category Event\n */\nclass ConnectionReadyEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionReadyEvent = ConnectionReadyEvent;\n/**\n * An event published when a connection is closed\n * @public\n * @category Event\n */\nclass ConnectionClosedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection, reason) {\n        super(pool);\n        this.connectionId = connection.id;\n        this.reason = reason || 'unknown';\n        this.serviceId = connection.serviceId;\n    }\n}\nexports.ConnectionClosedEvent = ConnectionClosedEvent;\n/**\n * An event published when a request to check a connection out begins\n * @public\n * @category Event\n */\nclass ConnectionCheckOutStartedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        super(pool);\n    }\n}\nexports.ConnectionCheckOutStartedEvent = ConnectionCheckOutStartedEvent;\n/**\n * An event published when a request to check a connection out fails\n * @public\n * @category Event\n */\nclass ConnectionCheckOutFailedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, reason) {\n        super(pool);\n        this.reason = reason;\n    }\n}\nexports.ConnectionCheckOutFailedEvent = ConnectionCheckOutFailedEvent;\n/**\n * An event published when a connection is checked out of the connection pool\n * @public\n * @category Event\n */\nclass ConnectionCheckedOutEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionCheckedOutEvent = ConnectionCheckedOutEvent;\n/**\n * An event published when a connection is checked into the connection pool\n * @public\n * @category Event\n */\nclass ConnectionCheckedInEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionCheckedInEvent = ConnectionCheckedInEvent;\n/**\n * An event published when a connection pool is cleared\n * @public\n * @category Event\n */\nclass ConnectionPoolClearedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, serviceId) {\n        super(pool);\n        this.serviceId = serviceId;\n    }\n}\nexports.ConnectionPoolClearedEvent = ConnectionPoolClearedEvent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}