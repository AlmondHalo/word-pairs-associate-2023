{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InsertManyOperation = exports.InsertOneOperation = exports.InsertOperation = void 0;\n\nconst error_1 = require(\"../error\");\n\nconst operation_1 = require(\"./operation\");\n\nconst command_1 = require(\"./command\");\n\nconst common_functions_1 = require(\"./common_functions\");\n\nconst write_concern_1 = require(\"../write_concern\");\n\nconst bulk_write_1 = require(\"./bulk_write\");\n/** @internal */\n\n\nclass InsertOperation extends command_1.CommandOperation {\n  constructor(ns, documents, options) {\n    var _a;\n\n    super(undefined, options);\n    this.options = { ...options,\n      checkKeys: (_a = options.checkKeys) !== null && _a !== void 0 ? _a : false\n    };\n    this.ns = ns;\n    this.documents = documents;\n  }\n\n  execute(server, session, callback) {\n    var _a;\n\n    const options = (_a = this.options) !== null && _a !== void 0 ? _a : {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command = {\n      insert: this.ns.collection,\n      documents: this.documents,\n      ordered\n    };\n\n    if (typeof options.bypassDocumentValidation === 'boolean') {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (options.comment != null) {\n      command.comment = options.comment;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n\n}\n\nexports.InsertOperation = InsertOperation;\n\nclass InsertOneOperation extends InsertOperation {\n  constructor(collection, doc, options) {\n    super(collection.s.namespace, common_functions_1.prepareDocs(collection, [doc], options), options);\n  }\n\n  execute(server, session, callback) {\n    super.execute(server, session, (err, res) => {\n      var _a, _b;\n\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new error_1.MongoServerError(res));\n\n      if (res.writeErrors) {\n        // This should be a WriteError but we can't change it now because of error hierarchy\n        return callback(new error_1.MongoServerError(res.writeErrors[0]));\n      }\n\n      callback(undefined, {\n        acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n        insertedId: this.documents[0]._id\n      });\n    });\n  }\n\n}\n\nexports.InsertOneOperation = InsertOneOperation;\n/** @internal */\n\nclass InsertManyOperation extends operation_1.AbstractOperation {\n  constructor(collection, docs, options) {\n    super(options);\n\n    if (!Array.isArray(docs)) {\n      throw new error_1.MongoInvalidArgumentError('Argument \"docs\" must be an array of documents');\n    }\n\n    this.options = options;\n    this.collection = collection;\n    this.docs = docs;\n  }\n\n  execute(server, session, callback) {\n    const coll = this.collection;\n    const options = { ...this.options,\n      ...this.bsonOptions,\n      readPreference: this.readPreference\n    };\n    const writeConcern = write_concern_1.WriteConcern.fromOptions(options);\n    const bulkWriteOperation = new bulk_write_1.BulkWriteOperation(coll, common_functions_1.prepareDocs(coll, this.docs, options).map(document => ({\n      insertOne: {\n        document\n      }\n    })), options);\n    bulkWriteOperation.execute(server, session, (err, res) => {\n      var _a;\n\n      if (err || res == null) return callback(err);\n      callback(undefined, {\n        acknowledged: (_a = (writeConcern === null || writeConcern === void 0 ? void 0 : writeConcern.w) !== 0) !== null && _a !== void 0 ? _a : true,\n        insertedCount: res.insertedCount,\n        insertedIds: res.insertedIds\n      });\n    });\n  }\n\n}\n\nexports.InsertManyOperation = InsertManyOperation;\noperation_1.defineAspects(InsertOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION]);\noperation_1.defineAspects(InsertOneOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION]);\noperation_1.defineAspects(InsertManyOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"names":["Object","defineProperty","exports","value","InsertManyOperation","InsertOneOperation","InsertOperation","error_1","require","operation_1","command_1","common_functions_1","write_concern_1","bulk_write_1","CommandOperation","constructor","ns","documents","options","_a","undefined","checkKeys","execute","server","session","callback","ordered","command","insert","collection","bypassDocumentValidation","comment","executeCommand","doc","s","namespace","prepareDocs","err","res","_b","code","MongoServerError","writeErrors","acknowledged","writeConcern","w","insertedId","_id","AbstractOperation","docs","Array","isArray","MongoInvalidArgumentError","coll","bsonOptions","readPreference","WriteConcern","fromOptions","bulkWriteOperation","BulkWriteOperation","map","document","insertOne","insertedCount","insertedIds","defineAspects","Aspect","RETRYABLE","WRITE_OPERATION"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/operations/insert.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InsertManyOperation = exports.InsertOneOperation = exports.InsertOperation = void 0;\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\nconst command_1 = require(\"./command\");\nconst common_functions_1 = require(\"./common_functions\");\nconst write_concern_1 = require(\"../write_concern\");\nconst bulk_write_1 = require(\"./bulk_write\");\n/** @internal */\nclass InsertOperation extends command_1.CommandOperation {\n    constructor(ns, documents, options) {\n        var _a;\n        super(undefined, options);\n        this.options = { ...options, checkKeys: (_a = options.checkKeys) !== null && _a !== void 0 ? _a : false };\n        this.ns = ns;\n        this.documents = documents;\n    }\n    execute(server, session, callback) {\n        var _a;\n        const options = (_a = this.options) !== null && _a !== void 0 ? _a : {};\n        const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n        const command = {\n            insert: this.ns.collection,\n            documents: this.documents,\n            ordered\n        };\n        if (typeof options.bypassDocumentValidation === 'boolean') {\n            command.bypassDocumentValidation = options.bypassDocumentValidation;\n        }\n        if (options.comment != null) {\n            command.comment = options.comment;\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.InsertOperation = InsertOperation;\nclass InsertOneOperation extends InsertOperation {\n    constructor(collection, doc, options) {\n        super(collection.s.namespace, common_functions_1.prepareDocs(collection, [doc], options), options);\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, res) => {\n            var _a, _b;\n            if (err || res == null)\n                return callback(err);\n            if (res.code)\n                return callback(new error_1.MongoServerError(res));\n            if (res.writeErrors) {\n                // This should be a WriteError but we can't change it now because of error hierarchy\n                return callback(new error_1.MongoServerError(res.writeErrors[0]));\n            }\n            callback(undefined, {\n                acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n                insertedId: this.documents[0]._id\n            });\n        });\n    }\n}\nexports.InsertOneOperation = InsertOneOperation;\n/** @internal */\nclass InsertManyOperation extends operation_1.AbstractOperation {\n    constructor(collection, docs, options) {\n        super(options);\n        if (!Array.isArray(docs)) {\n            throw new error_1.MongoInvalidArgumentError('Argument \"docs\" must be an array of documents');\n        }\n        this.options = options;\n        this.collection = collection;\n        this.docs = docs;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        const options = { ...this.options, ...this.bsonOptions, readPreference: this.readPreference };\n        const writeConcern = write_concern_1.WriteConcern.fromOptions(options);\n        const bulkWriteOperation = new bulk_write_1.BulkWriteOperation(coll, common_functions_1.prepareDocs(coll, this.docs, options).map(document => ({ insertOne: { document } })), options);\n        bulkWriteOperation.execute(server, session, (err, res) => {\n            var _a;\n            if (err || res == null)\n                return callback(err);\n            callback(undefined, {\n                acknowledged: (_a = (writeConcern === null || writeConcern === void 0 ? void 0 : writeConcern.w) !== 0) !== null && _a !== void 0 ? _a : true,\n                insertedCount: res.insertedCount,\n                insertedIds: res.insertedIds\n            });\n        });\n    }\n}\nexports.InsertManyOperation = InsertManyOperation;\noperation_1.defineAspects(InsertOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION]);\noperation_1.defineAspects(InsertOneOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION]);\noperation_1.defineAspects(InsertManyOperation, [operation_1.Aspect.WRITE_OPERATION]);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}