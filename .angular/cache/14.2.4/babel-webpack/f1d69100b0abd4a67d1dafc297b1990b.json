{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decompress = exports.compress = exports.uncompressibleCommands = exports.Compressor = void 0;\n\nconst zlib = require(\"zlib\");\n\nconst deps_1 = require(\"../../deps\");\n\nconst error_1 = require(\"../../error\");\n/** @public */\n\n\nexports.Compressor = Object.freeze({\n  none: 0,\n  snappy: 1,\n  zlib: 2\n});\nexports.uncompressibleCommands = new Set(['ismaster', 'saslStart', 'saslContinue', 'getnonce', 'authenticate', 'createUser', 'updateUser', 'copydbSaslStart', 'copydbgetnonce', 'copydb']); // Facilitate compressing a message using an agreed compressor\n\nfunction compress(self, dataToBeCompressed, callback) {\n  const zlibOptions = {};\n\n  switch (self.options.agreedCompressor) {\n    case 'snappy':\n      {\n        if ('kModuleError' in deps_1.Snappy) {\n          return callback(deps_1.Snappy['kModuleError']);\n        }\n\n        if (deps_1.Snappy[deps_1.PKG_VERSION].major <= 6) {\n          deps_1.Snappy.compress(dataToBeCompressed, callback);\n        } else {\n          deps_1.Snappy.compress(dataToBeCompressed).then(buffer => callback(undefined, buffer)).catch(error => callback(error));\n        }\n\n        break;\n      }\n\n    case 'zlib':\n      // Determine zlibCompressionLevel\n      if (self.options.zlibCompressionLevel) {\n        zlibOptions.level = self.options.zlibCompressionLevel;\n      }\n\n      zlib.deflate(dataToBeCompressed, zlibOptions, callback);\n      break;\n\n    default:\n      throw new error_1.MongoInvalidArgumentError(`Unknown compressor ${self.options.agreedCompressor} failed to compress`);\n  }\n}\n\nexports.compress = compress; // Decompress a message using the given compressor\n\nfunction decompress(compressorID, compressedData, callback) {\n  if (compressorID < 0 || compressorID > Math.max(2)) {\n    throw new error_1.MongoDecompressionError(`Server sent message compressed using an unsupported compressor. (Received compressor ID ${compressorID})`);\n  }\n\n  switch (compressorID) {\n    case exports.Compressor.snappy:\n      {\n        if ('kModuleError' in deps_1.Snappy) {\n          return callback(deps_1.Snappy['kModuleError']);\n        }\n\n        if (deps_1.Snappy[deps_1.PKG_VERSION].major <= 6) {\n          deps_1.Snappy.uncompress(compressedData, {\n            asBuffer: true\n          }, callback);\n        } else {\n          deps_1.Snappy.uncompress(compressedData, {\n            asBuffer: true\n          }).then(buffer => callback(undefined, buffer)).catch(error => callback(error));\n        }\n\n        break;\n      }\n\n    case exports.Compressor.zlib:\n      zlib.inflate(compressedData, callback);\n      break;\n\n    default:\n      callback(undefined, compressedData);\n  }\n}\n\nexports.decompress = decompress;","map":{"version":3,"names":["Object","defineProperty","exports","value","decompress","compress","uncompressibleCommands","Compressor","zlib","require","deps_1","error_1","freeze","none","snappy","Set","self","dataToBeCompressed","callback","zlibOptions","options","agreedCompressor","Snappy","PKG_VERSION","major","then","buffer","undefined","catch","error","zlibCompressionLevel","level","deflate","MongoInvalidArgumentError","compressorID","compressedData","Math","max","MongoDecompressionError","uncompress","asBuffer","inflate"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/cmap/wire_protocol/compression.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decompress = exports.compress = exports.uncompressibleCommands = exports.Compressor = void 0;\nconst zlib = require(\"zlib\");\nconst deps_1 = require(\"../../deps\");\nconst error_1 = require(\"../../error\");\n/** @public */\nexports.Compressor = Object.freeze({\n    none: 0,\n    snappy: 1,\n    zlib: 2\n});\nexports.uncompressibleCommands = new Set([\n    'ismaster',\n    'saslStart',\n    'saslContinue',\n    'getnonce',\n    'authenticate',\n    'createUser',\n    'updateUser',\n    'copydbSaslStart',\n    'copydbgetnonce',\n    'copydb'\n]);\n// Facilitate compressing a message using an agreed compressor\nfunction compress(self, dataToBeCompressed, callback) {\n    const zlibOptions = {};\n    switch (self.options.agreedCompressor) {\n        case 'snappy': {\n            if ('kModuleError' in deps_1.Snappy) {\n                return callback(deps_1.Snappy['kModuleError']);\n            }\n            if (deps_1.Snappy[deps_1.PKG_VERSION].major <= 6) {\n                deps_1.Snappy.compress(dataToBeCompressed, callback);\n            }\n            else {\n                deps_1.Snappy.compress(dataToBeCompressed)\n                    .then(buffer => callback(undefined, buffer))\n                    .catch(error => callback(error));\n            }\n            break;\n        }\n        case 'zlib':\n            // Determine zlibCompressionLevel\n            if (self.options.zlibCompressionLevel) {\n                zlibOptions.level = self.options.zlibCompressionLevel;\n            }\n            zlib.deflate(dataToBeCompressed, zlibOptions, callback);\n            break;\n        default:\n            throw new error_1.MongoInvalidArgumentError(`Unknown compressor ${self.options.agreedCompressor} failed to compress`);\n    }\n}\nexports.compress = compress;\n// Decompress a message using the given compressor\nfunction decompress(compressorID, compressedData, callback) {\n    if (compressorID < 0 || compressorID > Math.max(2)) {\n        throw new error_1.MongoDecompressionError(`Server sent message compressed using an unsupported compressor. (Received compressor ID ${compressorID})`);\n    }\n    switch (compressorID) {\n        case exports.Compressor.snappy: {\n            if ('kModuleError' in deps_1.Snappy) {\n                return callback(deps_1.Snappy['kModuleError']);\n            }\n            if (deps_1.Snappy[deps_1.PKG_VERSION].major <= 6) {\n                deps_1.Snappy.uncompress(compressedData, { asBuffer: true }, callback);\n            }\n            else {\n                deps_1.Snappy.uncompress(compressedData, { asBuffer: true })\n                    .then(buffer => callback(undefined, buffer))\n                    .catch(error => callback(error));\n            }\n            break;\n        }\n        case exports.Compressor.zlib:\n            zlib.inflate(compressedData, callback);\n            break;\n        default:\n            callback(undefined, compressedData);\n    }\n}\nexports.decompress = decompress;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}