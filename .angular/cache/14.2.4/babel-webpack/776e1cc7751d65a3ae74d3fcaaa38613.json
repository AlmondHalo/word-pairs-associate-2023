{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RenameOperation = void 0;\n\nconst utils_1 = require(\"../utils\");\n\nconst run_command_1 = require(\"./run_command\");\n\nconst operation_1 = require(\"./operation\");\n\nconst collection_1 = require(\"../collection\");\n\nconst error_1 = require(\"../error\");\n/** @internal */\n\n\nclass RenameOperation extends run_command_1.RunAdminCommandOperation {\n  constructor(collection, newName, options) {\n    // Check the collection name\n    utils_1.checkCollectionName(newName); // Build the command\n\n    const renameCollection = collection.namespace;\n    const toCollection = collection.s.namespace.withCollection(newName).toString();\n    const dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n    const cmd = {\n      renameCollection: renameCollection,\n      to: toCollection,\n      dropTarget: dropTarget\n    };\n    super(collection, cmd, options);\n    this.options = options;\n    this.collection = collection;\n    this.newName = newName;\n  }\n\n  execute(server, session, callback) {\n    const coll = this.collection;\n    super.execute(server, session, (err, doc) => {\n      if (err) return callback(err); // We have an error\n\n      if (doc.errmsg) {\n        return callback(new error_1.MongoServerError(doc));\n      }\n\n      let newColl;\n\n      try {\n        newColl = new collection_1.Collection(coll.s.db, this.newName, coll.s.options);\n      } catch (err) {\n        return callback(err);\n      }\n\n      return callback(undefined, newColl);\n    });\n  }\n\n}\n\nexports.RenameOperation = RenameOperation;\noperation_1.defineAspects(RenameOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"names":["Object","defineProperty","exports","value","RenameOperation","utils_1","require","run_command_1","operation_1","collection_1","error_1","RunAdminCommandOperation","constructor","collection","newName","options","checkCollectionName","renameCollection","namespace","toCollection","s","withCollection","toString","dropTarget","cmd","to","execute","server","session","callback","coll","err","doc","errmsg","MongoServerError","newColl","Collection","db","undefined","defineAspects","Aspect","WRITE_OPERATION"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/operations/rename.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RenameOperation = void 0;\nconst utils_1 = require(\"../utils\");\nconst run_command_1 = require(\"./run_command\");\nconst operation_1 = require(\"./operation\");\nconst collection_1 = require(\"../collection\");\nconst error_1 = require(\"../error\");\n/** @internal */\nclass RenameOperation extends run_command_1.RunAdminCommandOperation {\n    constructor(collection, newName, options) {\n        // Check the collection name\n        utils_1.checkCollectionName(newName);\n        // Build the command\n        const renameCollection = collection.namespace;\n        const toCollection = collection.s.namespace.withCollection(newName).toString();\n        const dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n        const cmd = { renameCollection: renameCollection, to: toCollection, dropTarget: dropTarget };\n        super(collection, cmd, options);\n        this.options = options;\n        this.collection = collection;\n        this.newName = newName;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        super.execute(server, session, (err, doc) => {\n            if (err)\n                return callback(err);\n            // We have an error\n            if (doc.errmsg) {\n                return callback(new error_1.MongoServerError(doc));\n            }\n            let newColl;\n            try {\n                newColl = new collection_1.Collection(coll.s.db, this.newName, coll.s.options);\n            }\n            catch (err) {\n                return callback(err);\n            }\n            return callback(undefined, newColl);\n        });\n    }\n}\nexports.RenameOperation = RenameOperation;\noperation_1.defineAspects(RenameOperation, [operation_1.Aspect.WRITE_OPERATION]);\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA5B;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,UAAD,CAAvB;AACA;;;AACA,MAAMF,eAAN,SAA8BG,aAAa,CAACI,wBAA5C,CAAqE;EACjEC,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsBC,OAAtB,EAA+B;IACtC;IACAV,OAAO,CAACW,mBAAR,CAA4BF,OAA5B,EAFsC,CAGtC;;IACA,MAAMG,gBAAgB,GAAGJ,UAAU,CAACK,SAApC;IACA,MAAMC,YAAY,GAAGN,UAAU,CAACO,CAAX,CAAaF,SAAb,CAAuBG,cAAvB,CAAsCP,OAAtC,EAA+CQ,QAA/C,EAArB;IACA,MAAMC,UAAU,GAAG,OAAOR,OAAO,CAACQ,UAAf,KAA8B,SAA9B,GAA0CR,OAAO,CAACQ,UAAlD,GAA+D,KAAlF;IACA,MAAMC,GAAG,GAAG;MAAEP,gBAAgB,EAAEA,gBAApB;MAAsCQ,EAAE,EAAEN,YAA1C;MAAwDI,UAAU,EAAEA;IAApE,CAAZ;IACA,MAAMV,UAAN,EAAkBW,GAAlB,EAAuBT,OAAvB;IACA,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKF,UAAL,GAAkBA,UAAlB;IACA,KAAKC,OAAL,GAAeA,OAAf;EACH;;EACDY,OAAO,CAACC,MAAD,EAASC,OAAT,EAAkBC,QAAlB,EAA4B;IAC/B,MAAMC,IAAI,GAAG,KAAKjB,UAAlB;IACA,MAAMa,OAAN,CAAcC,MAAd,EAAsBC,OAAtB,EAA+B,CAACG,GAAD,EAAMC,GAAN,KAAc;MACzC,IAAID,GAAJ,EACI,OAAOF,QAAQ,CAACE,GAAD,CAAf,CAFqC,CAGzC;;MACA,IAAIC,GAAG,CAACC,MAAR,EAAgB;QACZ,OAAOJ,QAAQ,CAAC,IAAInB,OAAO,CAACwB,gBAAZ,CAA6BF,GAA7B,CAAD,CAAf;MACH;;MACD,IAAIG,OAAJ;;MACA,IAAI;QACAA,OAAO,GAAG,IAAI1B,YAAY,CAAC2B,UAAjB,CAA4BN,IAAI,CAACV,CAAL,CAAOiB,EAAnC,EAAuC,KAAKvB,OAA5C,EAAqDgB,IAAI,CAACV,CAAL,CAAOL,OAA5D,CAAV;MACH,CAFD,CAGA,OAAOgB,GAAP,EAAY;QACR,OAAOF,QAAQ,CAACE,GAAD,CAAf;MACH;;MACD,OAAOF,QAAQ,CAACS,SAAD,EAAYH,OAAZ,CAAf;IACH,CAfD;EAgBH;;AAhCgE;;AAkCrEjC,OAAO,CAACE,eAAR,GAA0BA,eAA1B;AACAI,WAAW,CAAC+B,aAAZ,CAA0BnC,eAA1B,EAA2C,CAACI,WAAW,CAACgC,MAAZ,CAAmBC,eAApB,CAA3C"},"metadata":{},"sourceType":"script"}