{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IsCappedOperation = void 0;\n\nconst operation_1 = require(\"./operation\");\n\nconst error_1 = require(\"../error\");\n/** @internal */\n\n\nclass IsCappedOperation extends operation_1.AbstractOperation {\n  constructor(collection, options) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  execute(server, session, callback) {\n    const coll = this.collection;\n    coll.s.db.listCollections({\n      name: coll.collectionName\n    }, { ...this.options,\n      nameOnly: false,\n      readPreference: this.readPreference,\n      session\n    }).toArray((err, collections) => {\n      if (err || !collections) return callback(err);\n\n      if (collections.length === 0) {\n        // TODO(NODE-3485)\n        return callback(new error_1.MongoAPIError(`collection ${coll.namespace} not found`));\n      }\n\n      const collOptions = collections[0].options;\n      callback(undefined, !!(collOptions && collOptions.capped));\n    });\n  }\n\n}\n\nexports.IsCappedOperation = IsCappedOperation;","map":{"version":3,"names":["Object","defineProperty","exports","value","IsCappedOperation","operation_1","require","error_1","AbstractOperation","constructor","collection","options","execute","server","session","callback","coll","s","db","listCollections","name","collectionName","nameOnly","readPreference","toArray","err","collections","length","MongoAPIError","namespace","collOptions","undefined","capped"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/operations/is_capped.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IsCappedOperation = void 0;\nconst operation_1 = require(\"./operation\");\nconst error_1 = require(\"../error\");\n/** @internal */\nclass IsCappedOperation extends operation_1.AbstractOperation {\n    constructor(collection, options) {\n        super(options);\n        this.options = options;\n        this.collection = collection;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        coll.s.db\n            .listCollections({ name: coll.collectionName }, { ...this.options, nameOnly: false, readPreference: this.readPreference, session })\n            .toArray((err, collections) => {\n            if (err || !collections)\n                return callback(err);\n            if (collections.length === 0) {\n                // TODO(NODE-3485)\n                return callback(new error_1.MongoAPIError(`collection ${coll.namespace} not found`));\n            }\n            const collOptions = collections[0].options;\n            callback(undefined, !!(collOptions && collOptions.capped));\n        });\n    }\n}\nexports.IsCappedOperation = IsCappedOperation;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;AACA;;;AACA,MAAMF,iBAAN,SAAgCC,WAAW,CAACG,iBAA5C,CAA8D;EAC1DC,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;IAC7B,MAAMA,OAAN;IACA,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKD,UAAL,GAAkBA,UAAlB;EACH;;EACDE,OAAO,CAACC,MAAD,EAASC,OAAT,EAAkBC,QAAlB,EAA4B;IAC/B,MAAMC,IAAI,GAAG,KAAKN,UAAlB;IACAM,IAAI,CAACC,CAAL,CAAOC,EAAP,CACKC,eADL,CACqB;MAAEC,IAAI,EAAEJ,IAAI,CAACK;IAAb,CADrB,EACoD,EAAE,GAAG,KAAKV,OAAV;MAAmBW,QAAQ,EAAE,KAA7B;MAAoCC,cAAc,EAAE,KAAKA,cAAzD;MAAyET;IAAzE,CADpD,EAEKU,OAFL,CAEa,CAACC,GAAD,EAAMC,WAAN,KAAsB;MAC/B,IAAID,GAAG,IAAI,CAACC,WAAZ,EACI,OAAOX,QAAQ,CAACU,GAAD,CAAf;;MACJ,IAAIC,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B;QAC1B;QACA,OAAOZ,QAAQ,CAAC,IAAIR,OAAO,CAACqB,aAAZ,CAA2B,cAAaZ,IAAI,CAACa,SAAU,YAAvD,CAAD,CAAf;MACH;;MACD,MAAMC,WAAW,GAAGJ,WAAW,CAAC,CAAD,CAAX,CAAef,OAAnC;MACAI,QAAQ,CAACgB,SAAD,EAAY,CAAC,EAAED,WAAW,IAAIA,WAAW,CAACE,MAA7B,CAAb,CAAR;IACH,CAXD;EAYH;;AApByD;;AAsB9D9B,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B"},"metadata":{},"sourceType":"script"}