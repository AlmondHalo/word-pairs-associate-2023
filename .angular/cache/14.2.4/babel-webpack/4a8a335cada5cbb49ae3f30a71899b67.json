{"ast":null,"code":"import { WordDirective } from '../word.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../word.directive\";\n\nfunction WordAssociateInputComponent_ng_template_1_Template(rf, ctx) {}\n\nexport let WordAssociateInputComponent = /*#__PURE__*/(() => {\n  class WordAssociateInputComponent {\n    constructor() {\n      this.wordsInput = [];\n      this.currentAdIndex = -1;\n      this.counter = 0;\n    }\n\n    ngOnInit() {\n      this.loadComponent();\n      this.getWordsInputOne();\n    }\n\n    ngOnDestroy() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n\n    loadComponent() {\n      /*function shuffle(list) {\n        return list.reduce((p, n) => {\n          const size = p.length;\n          const index = Math.trunc(Math.random() * (size - 1));\n          p.splice(index, 0, n);\n          return p;\n        }, []);\n      };*/\n      if (this.counter < this.wordsInput.length) {\n        //this.currentAdIndex = (this.currentAdIndex + 1) % this.wordsInput.length;\n        this.wordsInput.sort(() => Math.random() - Math.random()).slice(0, 1); //const intersection = array1.filter(element => array2.includes(element));\n\n        this.currentAdIndex = Math.floor((this.currentAdIndex + 1) % this.wordsInput.length);\n        const addWordInput = this.wordsInput[this.currentAdIndex]; //console.log(\"My test\", this.wordsInput[this.currentAdIndex]);\n        //console.log (\"Find the word\", this.wordsInput);\n        //alert(this.wordsInput[this.currentAdIndex].data.listone);\n\n        console.log(\"random\", this.wordsInput.sort(() => Math.random() - Math.random()).slice(0, 1));\n        const viewContainerRef = this.wordHost.viewContainerRef;\n        viewContainerRef.clear();\n        const componentRef = viewContainerRef.createComponent(addWordInput.component);\n        componentRef.instance.data = addWordInput.data;\n        this.counter++; //console.log(\"more test\", componentRef.instance.data);\n      }\n    }\n\n    getWordsInputOne() {\n      this.interval = window.setInterval(() => {\n        this.loadComponent();\n      }, 5000);\n    }\n\n  }\n\n  WordAssociateInputComponent.ɵfac = function WordAssociateInputComponent_Factory(t) {\n    return new (t || WordAssociateInputComponent)();\n  };\n\n  WordAssociateInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WordAssociateInputComponent,\n    selectors: [[\"app-word-associate-input\"]],\n    viewQuery: function WordAssociateInputComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(WordDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wordHost = _t.first);\n      }\n    },\n    inputs: {\n      wordsInput: \"wordsInput\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"wordHost\", \"\"]],\n    template: function WordAssociateInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, WordAssociateInputComponent_ng_template_1_Template, 0, 0, \"ng-template\", 0);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [i1.WordDirective],\n    encapsulation: 2\n  });\n  return WordAssociateInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}