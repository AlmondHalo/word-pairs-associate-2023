{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BinMsg = exports.Msg = exports.Response = exports.KillCursor = exports.GetMore = exports.Query = void 0;\n\nconst read_preference_1 = require(\"../read_preference\");\n\nconst BSON = require(\"../bson\");\n\nconst utils_1 = require(\"../utils\");\n\nconst constants_1 = require(\"./wire_protocol/constants\");\n\nconst error_1 = require(\"../error\"); // Incrementing request id\n\n\nlet _requestId = 0; // Query flags\n\nconst OPTS_TAILABLE_CURSOR = 2;\nconst OPTS_SLAVE = 4;\nconst OPTS_OPLOG_REPLAY = 8;\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\nconst OPTS_AWAIT_DATA = 32;\nconst OPTS_EXHAUST = 64;\nconst OPTS_PARTIAL = 128; // Response flags\n\nconst CURSOR_NOT_FOUND = 1;\nconst QUERY_FAILURE = 2;\nconst SHARD_CONFIG_STALE = 4;\nconst AWAIT_CAPABLE = 8;\n/**************************************************************\n * QUERY\n **************************************************************/\n\n/** @internal */\n\nclass Query {\n  constructor(ns, query, options) {\n    // Basic options needed to be passed in\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (ns == null) throw new error_1.MongoRuntimeError('Namespace must be specified for query'); // TODO(NODE-3483): Replace with MongoCommandError\n\n    if (query == null) throw new error_1.MongoRuntimeError('A query document must be specified for query'); // Validate that we are not passing 0x00 in the collection name\n\n    if (ns.indexOf('\\x00') !== -1) {\n      // TODO(NODE-3483): Use MongoNamespace static method\n      throw new error_1.MongoRuntimeError('Namespace cannot contain a null character');\n    } // Basic options\n\n\n    this.ns = ns;\n    this.query = query; // Additional options\n\n    this.numberToSkip = options.numberToSkip || 0;\n    this.numberToReturn = options.numberToReturn || 0;\n    this.returnFieldSelector = options.returnFieldSelector || undefined;\n    this.requestId = Query.getRequestId(); // special case for pre-3.2 find commands, delete ASAP\n\n    this.pre32Limit = options.pre32Limit; // Serialization option\n\n    this.serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.batchSize = this.numberToReturn; // Flags\n\n    this.tailable = false;\n    this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n    this.oplogReplay = false;\n    this.noCursorTimeout = false;\n    this.awaitData = false;\n    this.exhaust = false;\n    this.partial = false;\n  }\n  /** Assign next request Id. */\n\n\n  incRequestId() {\n    this.requestId = _requestId++;\n  }\n  /** Peek next request Id. */\n\n\n  nextRequestId() {\n    return _requestId + 1;\n  }\n  /** Increment then return next request Id. */\n\n\n  static getRequestId() {\n    return ++_requestId;\n  } // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\n  toBin() {\n    const buffers = [];\n    let projection = null; // Set up the flags\n\n    let flags = 0;\n\n    if (this.tailable) {\n      flags |= OPTS_TAILABLE_CURSOR;\n    }\n\n    if (this.slaveOk) {\n      flags |= OPTS_SLAVE;\n    }\n\n    if (this.oplogReplay) {\n      flags |= OPTS_OPLOG_REPLAY;\n    }\n\n    if (this.noCursorTimeout) {\n      flags |= OPTS_NO_CURSOR_TIMEOUT;\n    }\n\n    if (this.awaitData) {\n      flags |= OPTS_AWAIT_DATA;\n    }\n\n    if (this.exhaust) {\n      flags |= OPTS_EXHAUST;\n    }\n\n    if (this.partial) {\n      flags |= OPTS_PARTIAL;\n    } // If batchSize is different to this.numberToReturn\n\n\n    if (this.batchSize !== this.numberToReturn) this.numberToReturn = this.batchSize; // Allocate write protocol header buffer\n\n    const header = Buffer.alloc(4 * 4 + // Header\n    4 + // Flags\n    Buffer.byteLength(this.ns) + 1 + // namespace\n    4 + // numberToSkip\n    4 // numberToReturn\n    ); // Add header to buffers\n\n    buffers.push(header); // Serialize the query\n\n    const query = BSON.serialize(this.query, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    }); // Add query document\n\n    buffers.push(query);\n\n    if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n      // Serialize the projection document\n      projection = BSON.serialize(this.returnFieldSelector, {\n        checkKeys: this.checkKeys,\n        serializeFunctions: this.serializeFunctions,\n        ignoreUndefined: this.ignoreUndefined\n      }); // Add projection document\n\n      buffers.push(projection);\n    } // Total message size\n\n\n    const totalLength = header.length + query.length + (projection ? projection.length : 0); // Set up the index\n\n    let index = 4; // Write total document length\n\n    header[3] = totalLength >> 24 & 0xff;\n    header[2] = totalLength >> 16 & 0xff;\n    header[1] = totalLength >> 8 & 0xff;\n    header[0] = totalLength & 0xff; // Write header information requestId\n\n    header[index + 3] = this.requestId >> 24 & 0xff;\n    header[index + 2] = this.requestId >> 16 & 0xff;\n    header[index + 1] = this.requestId >> 8 & 0xff;\n    header[index] = this.requestId & 0xff;\n    index = index + 4; // Write header information responseTo\n\n    header[index + 3] = 0 >> 24 & 0xff;\n    header[index + 2] = 0 >> 16 & 0xff;\n    header[index + 1] = 0 >> 8 & 0xff;\n    header[index] = 0 & 0xff;\n    index = index + 4; // Write header information OP_QUERY\n\n    header[index + 3] = constants_1.OP_QUERY >> 24 & 0xff;\n    header[index + 2] = constants_1.OP_QUERY >> 16 & 0xff;\n    header[index + 1] = constants_1.OP_QUERY >> 8 & 0xff;\n    header[index] = constants_1.OP_QUERY & 0xff;\n    index = index + 4; // Write header information flags\n\n    header[index + 3] = flags >> 24 & 0xff;\n    header[index + 2] = flags >> 16 & 0xff;\n    header[index + 1] = flags >> 8 & 0xff;\n    header[index] = flags & 0xff;\n    index = index + 4; // Write collection name\n\n    index = index + header.write(this.ns, index, 'utf8') + 1;\n    header[index - 1] = 0; // Write header information flags numberToSkip\n\n    header[index + 3] = this.numberToSkip >> 24 & 0xff;\n    header[index + 2] = this.numberToSkip >> 16 & 0xff;\n    header[index + 1] = this.numberToSkip >> 8 & 0xff;\n    header[index] = this.numberToSkip & 0xff;\n    index = index + 4; // Write header information flags numberToReturn\n\n    header[index + 3] = this.numberToReturn >> 24 & 0xff;\n    header[index + 2] = this.numberToReturn >> 16 & 0xff;\n    header[index + 1] = this.numberToReturn >> 8 & 0xff;\n    header[index] = this.numberToReturn & 0xff;\n    index = index + 4; // Return the buffers\n\n    return buffers;\n  }\n\n}\n\nexports.Query = Query;\n/**************************************************************\n * GETMORE\n **************************************************************/\n\n/** @internal */\n\nclass GetMore {\n  constructor(ns, cursorId, opts = {}) {\n    this.numberToReturn = opts.numberToReturn || 0;\n    this.requestId = _requestId++;\n    this.ns = ns;\n    this.cursorId = cursorId;\n  } // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\n  toBin() {\n    const length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4; // Create command buffer\n\n    let index = 0; // Allocate buffer\n\n    const _buffer = Buffer.alloc(length); // Write header information\n    // index = write32bit(index, _buffer, length);\n\n\n    _buffer[index + 3] = length >> 24 & 0xff;\n    _buffer[index + 2] = length >> 16 & 0xff;\n    _buffer[index + 1] = length >> 8 & 0xff;\n    _buffer[index] = length & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, requestId);\n\n    _buffer[index + 3] = this.requestId >> 24 & 0xff;\n    _buffer[index + 2] = this.requestId >> 16 & 0xff;\n    _buffer[index + 1] = this.requestId >> 8 & 0xff;\n    _buffer[index] = this.requestId & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, OP_GETMORE);\n\n    _buffer[index + 3] = constants_1.OP_GETMORE >> 24 & 0xff;\n    _buffer[index + 2] = constants_1.OP_GETMORE >> 16 & 0xff;\n    _buffer[index + 1] = constants_1.OP_GETMORE >> 8 & 0xff;\n    _buffer[index] = constants_1.OP_GETMORE & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // Write collection name\n\n    index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n    _buffer[index - 1] = 0; // Write batch size\n    // index = write32bit(index, _buffer, numberToReturn);\n\n    _buffer[index + 3] = this.numberToReturn >> 24 & 0xff;\n    _buffer[index + 2] = this.numberToReturn >> 16 & 0xff;\n    _buffer[index + 1] = this.numberToReturn >> 8 & 0xff;\n    _buffer[index] = this.numberToReturn & 0xff;\n    index = index + 4; // Write cursor id\n    // index = write32bit(index, _buffer, cursorId.getLowBits());\n\n    _buffer[index + 3] = this.cursorId.getLowBits() >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorId.getLowBits() >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorId.getLowBits() >> 8 & 0xff;\n    _buffer[index] = this.cursorId.getLowBits() & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, cursorId.getHighBits());\n\n    _buffer[index + 3] = this.cursorId.getHighBits() >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorId.getHighBits() >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorId.getHighBits() >> 8 & 0xff;\n    _buffer[index] = this.cursorId.getHighBits() & 0xff;\n    index = index + 4; // Return buffer\n\n    return [_buffer];\n  }\n\n}\n\nexports.GetMore = GetMore;\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\n\n/** @internal */\n\nclass KillCursor {\n  constructor(ns, cursorIds) {\n    this.ns = ns;\n    this.requestId = _requestId++;\n    this.cursorIds = cursorIds;\n  } // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\n  toBin() {\n    const length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8; // Create command buffer\n\n    let index = 0;\n\n    const _buffer = Buffer.alloc(length); // Write header information\n    // index = write32bit(index, _buffer, length);\n\n\n    _buffer[index + 3] = length >> 24 & 0xff;\n    _buffer[index + 2] = length >> 16 & 0xff;\n    _buffer[index + 1] = length >> 8 & 0xff;\n    _buffer[index] = length & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, requestId);\n\n    _buffer[index + 3] = this.requestId >> 24 & 0xff;\n    _buffer[index + 2] = this.requestId >> 16 & 0xff;\n    _buffer[index + 1] = this.requestId >> 8 & 0xff;\n    _buffer[index] = this.requestId & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n\n    _buffer[index + 3] = constants_1.OP_KILL_CURSORS >> 24 & 0xff;\n    _buffer[index + 2] = constants_1.OP_KILL_CURSORS >> 16 & 0xff;\n    _buffer[index + 1] = constants_1.OP_KILL_CURSORS >> 8 & 0xff;\n    _buffer[index] = constants_1.OP_KILL_CURSORS & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // Write batch size\n    // index = write32bit(index, _buffer, this.cursorIds.length);\n\n    _buffer[index + 3] = this.cursorIds.length >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorIds.length >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorIds.length >> 8 & 0xff;\n    _buffer[index] = this.cursorIds.length & 0xff;\n    index = index + 4; // Write all the cursor ids into the array\n\n    for (let i = 0; i < this.cursorIds.length; i++) {\n      // Write cursor id\n      // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n      _buffer[index + 3] = this.cursorIds[i].getLowBits() >> 24 & 0xff;\n      _buffer[index + 2] = this.cursorIds[i].getLowBits() >> 16 & 0xff;\n      _buffer[index + 1] = this.cursorIds[i].getLowBits() >> 8 & 0xff;\n      _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n      index = index + 4; // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n\n      _buffer[index + 3] = this.cursorIds[i].getHighBits() >> 24 & 0xff;\n      _buffer[index + 2] = this.cursorIds[i].getHighBits() >> 16 & 0xff;\n      _buffer[index + 1] = this.cursorIds[i].getHighBits() >> 8 & 0xff;\n      _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n      index = index + 4;\n    } // Return buffer\n\n\n    return [_buffer];\n  }\n\n}\n\nexports.KillCursor = KillCursor;\n/** @internal */\n\nclass Response {\n  constructor(message, msgHeader, msgBody, opts) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts !== null && opts !== void 0 ? opts : {\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    }; // Read the message header\n\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed; // Read the message body\n\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.cursorId = new BSON.Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n    this.startingFrom = msgBody.readInt32LE(12);\n    this.numberReturned = msgBody.readInt32LE(16); // Preallocate document array\n\n    this.documents = new Array(this.numberReturned); // Flag values\n\n    this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n    this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n    this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n    this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues = typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers = typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n  }\n\n  isParsed() {\n    return this.parsed;\n  }\n\n  parse(options) {\n    var _a, _b, _c, _d; // Don't parse again if not needed\n\n\n    if (this.parsed) return;\n    options = options !== null && options !== void 0 ? options : {}; // Allow the return of raw documents instead of parsing\n\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const promoteLongs = (_a = options.promoteLongs) !== null && _a !== void 0 ? _a : this.opts.promoteLongs;\n    const promoteValues = (_b = options.promoteValues) !== null && _b !== void 0 ? _b : this.opts.promoteValues;\n    const promoteBuffers = (_c = options.promoteBuffers) !== null && _c !== void 0 ? _c : this.opts.promoteBuffers;\n    const bsonRegExp = (_d = options.bsonRegExp) !== null && _d !== void 0 ? _d : this.opts.bsonRegExp;\n    let bsonSize; // Set up the options\n\n    const _options = {\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp\n    }; // Position within OP_REPLY at which documents start\n    // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n\n    this.index = 20; // Parse Body\n\n    for (let i = 0; i < this.numberReturned; i++) {\n      bsonSize = this.data[this.index] | this.data[this.index + 1] << 8 | this.data[this.index + 2] << 16 | this.data[this.index + 3] << 24; // If we have raw results specified slice the return document\n\n      if (raw) {\n        this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n      } else {\n        this.documents[i] = BSON.deserialize(this.data.slice(this.index, this.index + bsonSize), _options);\n      } // Adjust the index\n\n\n      this.index = this.index + bsonSize;\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      _options.fieldsAsRaw = fieldsAsRaw;\n      const doc = BSON.deserialize(this.documents[0], _options);\n      this.documents = [doc];\n    } // Set parsed\n\n\n    this.parsed = true;\n  }\n\n}\n\nexports.Response = Response; // Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n// Msg Flags\n\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n/** @internal */\n\nclass Msg {\n  constructor(ns, command, options) {\n    // Basic options needed to be passed in\n    if (command == null) throw new error_1.MongoInvalidArgumentError('Query document must be specified for query'); // Basic options\n\n    this.ns = ns;\n    this.command = command;\n    this.command.$db = utils_1.databaseNamespace(ns);\n\n    if (options.readPreference && options.readPreference.mode !== read_preference_1.ReadPreference.PRIMARY) {\n      this.command.$readPreference = options.readPreference.toJSON();\n    } // Ensure empty options\n\n\n    this.options = options !== null && options !== void 0 ? options : {}; // Additional options\n\n    this.requestId = options.requestId ? options.requestId : Msg.getRequestId(); // Serialization option\n\n    this.serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16; // flags\n\n    this.checksumPresent = false;\n    this.moreToCome = options.moreToCome || false;\n    this.exhaustAllowed = typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n  }\n\n  toBin() {\n    const buffers = [];\n    let flags = 0;\n\n    if (this.checksumPresent) {\n      flags |= OPTS_CHECKSUM_PRESENT;\n    }\n\n    if (this.moreToCome) {\n      flags |= OPTS_MORE_TO_COME;\n    }\n\n    if (this.exhaustAllowed) {\n      flags |= OPTS_EXHAUST_ALLOWED;\n    }\n\n    const header = Buffer.alloc(4 * 4 + // Header\n    4 // Flags\n    );\n    buffers.push(header);\n    let totalLength = header.length;\n    const command = this.command;\n    totalLength += this.makeDocumentSegment(buffers, command);\n    header.writeInt32LE(totalLength, 0); // messageLength\n\n    header.writeInt32LE(this.requestId, 4); // requestID\n\n    header.writeInt32LE(0, 8); // responseTo\n\n    header.writeInt32LE(constants_1.OP_MSG, 12); // opCode\n\n    header.writeUInt32LE(flags, 16); // flags\n\n    return buffers;\n  }\n\n  makeDocumentSegment(buffers, document) {\n    const payloadTypeBuffer = Buffer.alloc(1);\n    payloadTypeBuffer[0] = 0;\n    const documentBuffer = this.serializeBson(document);\n    buffers.push(payloadTypeBuffer);\n    buffers.push(documentBuffer);\n    return payloadTypeBuffer.length + documentBuffer.length;\n  }\n\n  serializeBson(document) {\n    return BSON.serialize(document, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n  }\n\n  static getRequestId() {\n    _requestId = _requestId + 1 & 0x7fffffff;\n    return _requestId;\n  }\n\n}\n\nexports.Msg = Msg;\n/** @internal */\n\nclass BinMsg {\n  constructor(message, msgHeader, msgBody, opts) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts !== null && opts !== void 0 ? opts : {\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    }; // Read the message header\n\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed; // Read response flags\n\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n    this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n    this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues = typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers = typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n    this.documents = [];\n  }\n\n  isParsed() {\n    return this.parsed;\n  }\n\n  parse(options) {\n    var _a, _b, _c, _d; // Don't parse again if not needed\n\n\n    if (this.parsed) return;\n    options = options !== null && options !== void 0 ? options : {};\n    this.index = 4; // Allow the return of raw documents instead of parsing\n\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const promoteLongs = (_a = options.promoteLongs) !== null && _a !== void 0 ? _a : this.opts.promoteLongs;\n    const promoteValues = (_b = options.promoteValues) !== null && _b !== void 0 ? _b : this.opts.promoteValues;\n    const promoteBuffers = (_c = options.promoteBuffers) !== null && _c !== void 0 ? _c : this.opts.promoteBuffers;\n    const bsonRegExp = (_d = options.bsonRegExp) !== null && _d !== void 0 ? _d : this.opts.bsonRegExp; // Set up the options\n\n    const _options = {\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp\n    };\n\n    while (this.index < this.data.length) {\n      const payloadType = this.data.readUInt8(this.index++);\n\n      if (payloadType === 0) {\n        const bsonSize = this.data.readUInt32LE(this.index);\n        const bin = this.data.slice(this.index, this.index + bsonSize);\n        this.documents.push(raw ? bin : BSON.deserialize(bin, _options));\n        this.index += bsonSize;\n      } else if (payloadType === 1) {\n        // It was decided that no driver makes use of payload type 1\n        // TODO(NODE-3483): Replace with MongoDeprecationError\n        throw new error_1.MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n      }\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      _options.fieldsAsRaw = fieldsAsRaw;\n      const doc = BSON.deserialize(this.documents[0], _options);\n      this.documents = [doc];\n    }\n\n    this.parsed = true;\n  }\n\n}\n\nexports.BinMsg = BinMsg;","map":{"version":3,"names":["Object","defineProperty","exports","value","BinMsg","Msg","Response","KillCursor","GetMore","Query","read_preference_1","require","BSON","utils_1","constants_1","error_1","_requestId","OPTS_TAILABLE_CURSOR","OPTS_SLAVE","OPTS_OPLOG_REPLAY","OPTS_NO_CURSOR_TIMEOUT","OPTS_AWAIT_DATA","OPTS_EXHAUST","OPTS_PARTIAL","CURSOR_NOT_FOUND","QUERY_FAILURE","SHARD_CONFIG_STALE","AWAIT_CAPABLE","constructor","ns","query","options","MongoRuntimeError","indexOf","numberToSkip","numberToReturn","returnFieldSelector","undefined","requestId","getRequestId","pre32Limit","serializeFunctions","ignoreUndefined","maxBsonSize","checkKeys","batchSize","tailable","slaveOk","oplogReplay","noCursorTimeout","awaitData","exhaust","partial","incRequestId","nextRequestId","toBin","buffers","projection","flags","header","Buffer","alloc","byteLength","push","serialize","keys","length","totalLength","index","OP_QUERY","write","cursorId","opts","_buffer","OP_GETMORE","getLowBits","getHighBits","cursorIds","OP_KILL_CURSORS","i","message","msgHeader","msgBody","parsed","raw","data","promoteLongs","promoteValues","promoteBuffers","bsonRegExp","responseTo","opCode","fromCompressed","responseFlags","readInt32LE","Long","startingFrom","numberReturned","documents","Array","cursorNotFound","queryFailure","shardConfigStale","awaitCapable","isParsed","parse","_a","_b","_c","_d","documentsReturnedIn","bsonSize","_options","slice","deserialize","fieldsAsRaw","doc","OPTS_CHECKSUM_PRESENT","OPTS_MORE_TO_COME","OPTS_EXHAUST_ALLOWED","command","MongoInvalidArgumentError","$db","databaseNamespace","readPreference","mode","ReadPreference","PRIMARY","$readPreference","toJSON","checksumPresent","moreToCome","exhaustAllowed","makeDocumentSegment","writeInt32LE","OP_MSG","writeUInt32LE","document","payloadTypeBuffer","documentBuffer","serializeBson","payloadType","readUInt8","readUInt32LE","bin"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/cmap/commands.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinMsg = exports.Msg = exports.Response = exports.KillCursor = exports.GetMore = exports.Query = void 0;\nconst read_preference_1 = require(\"../read_preference\");\nconst BSON = require(\"../bson\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"./wire_protocol/constants\");\nconst error_1 = require(\"../error\");\n// Incrementing request id\nlet _requestId = 0;\n// Query flags\nconst OPTS_TAILABLE_CURSOR = 2;\nconst OPTS_SLAVE = 4;\nconst OPTS_OPLOG_REPLAY = 8;\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\nconst OPTS_AWAIT_DATA = 32;\nconst OPTS_EXHAUST = 64;\nconst OPTS_PARTIAL = 128;\n// Response flags\nconst CURSOR_NOT_FOUND = 1;\nconst QUERY_FAILURE = 2;\nconst SHARD_CONFIG_STALE = 4;\nconst AWAIT_CAPABLE = 8;\n/**************************************************************\n * QUERY\n **************************************************************/\n/** @internal */\nclass Query {\n    constructor(ns, query, options) {\n        // Basic options needed to be passed in\n        // TODO(NODE-3483): Replace with MongoCommandError\n        if (ns == null)\n            throw new error_1.MongoRuntimeError('Namespace must be specified for query');\n        // TODO(NODE-3483): Replace with MongoCommandError\n        if (query == null)\n            throw new error_1.MongoRuntimeError('A query document must be specified for query');\n        // Validate that we are not passing 0x00 in the collection name\n        if (ns.indexOf('\\x00') !== -1) {\n            // TODO(NODE-3483): Use MongoNamespace static method\n            throw new error_1.MongoRuntimeError('Namespace cannot contain a null character');\n        }\n        // Basic options\n        this.ns = ns;\n        this.query = query;\n        // Additional options\n        this.numberToSkip = options.numberToSkip || 0;\n        this.numberToReturn = options.numberToReturn || 0;\n        this.returnFieldSelector = options.returnFieldSelector || undefined;\n        this.requestId = Query.getRequestId();\n        // special case for pre-3.2 find commands, delete ASAP\n        this.pre32Limit = options.pre32Limit;\n        // Serialization option\n        this.serializeFunctions =\n            typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n        this.ignoreUndefined =\n            typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n        this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n        this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n        this.batchSize = this.numberToReturn;\n        // Flags\n        this.tailable = false;\n        this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n        this.oplogReplay = false;\n        this.noCursorTimeout = false;\n        this.awaitData = false;\n        this.exhaust = false;\n        this.partial = false;\n    }\n    /** Assign next request Id. */\n    incRequestId() {\n        this.requestId = _requestId++;\n    }\n    /** Peek next request Id. */\n    nextRequestId() {\n        return _requestId + 1;\n    }\n    /** Increment then return next request Id. */\n    static getRequestId() {\n        return ++_requestId;\n    }\n    // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n    toBin() {\n        const buffers = [];\n        let projection = null;\n        // Set up the flags\n        let flags = 0;\n        if (this.tailable) {\n            flags |= OPTS_TAILABLE_CURSOR;\n        }\n        if (this.slaveOk) {\n            flags |= OPTS_SLAVE;\n        }\n        if (this.oplogReplay) {\n            flags |= OPTS_OPLOG_REPLAY;\n        }\n        if (this.noCursorTimeout) {\n            flags |= OPTS_NO_CURSOR_TIMEOUT;\n        }\n        if (this.awaitData) {\n            flags |= OPTS_AWAIT_DATA;\n        }\n        if (this.exhaust) {\n            flags |= OPTS_EXHAUST;\n        }\n        if (this.partial) {\n            flags |= OPTS_PARTIAL;\n        }\n        // If batchSize is different to this.numberToReturn\n        if (this.batchSize !== this.numberToReturn)\n            this.numberToReturn = this.batchSize;\n        // Allocate write protocol header buffer\n        const header = Buffer.alloc(4 * 4 + // Header\n            4 + // Flags\n            Buffer.byteLength(this.ns) +\n            1 + // namespace\n            4 + // numberToSkip\n            4 // numberToReturn\n        );\n        // Add header to buffers\n        buffers.push(header);\n        // Serialize the query\n        const query = BSON.serialize(this.query, {\n            checkKeys: this.checkKeys,\n            serializeFunctions: this.serializeFunctions,\n            ignoreUndefined: this.ignoreUndefined\n        });\n        // Add query document\n        buffers.push(query);\n        if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n            // Serialize the projection document\n            projection = BSON.serialize(this.returnFieldSelector, {\n                checkKeys: this.checkKeys,\n                serializeFunctions: this.serializeFunctions,\n                ignoreUndefined: this.ignoreUndefined\n            });\n            // Add projection document\n            buffers.push(projection);\n        }\n        // Total message size\n        const totalLength = header.length + query.length + (projection ? projection.length : 0);\n        // Set up the index\n        let index = 4;\n        // Write total document length\n        header[3] = (totalLength >> 24) & 0xff;\n        header[2] = (totalLength >> 16) & 0xff;\n        header[1] = (totalLength >> 8) & 0xff;\n        header[0] = totalLength & 0xff;\n        // Write header information requestId\n        header[index + 3] = (this.requestId >> 24) & 0xff;\n        header[index + 2] = (this.requestId >> 16) & 0xff;\n        header[index + 1] = (this.requestId >> 8) & 0xff;\n        header[index] = this.requestId & 0xff;\n        index = index + 4;\n        // Write header information responseTo\n        header[index + 3] = (0 >> 24) & 0xff;\n        header[index + 2] = (0 >> 16) & 0xff;\n        header[index + 1] = (0 >> 8) & 0xff;\n        header[index] = 0 & 0xff;\n        index = index + 4;\n        // Write header information OP_QUERY\n        header[index + 3] = (constants_1.OP_QUERY >> 24) & 0xff;\n        header[index + 2] = (constants_1.OP_QUERY >> 16) & 0xff;\n        header[index + 1] = (constants_1.OP_QUERY >> 8) & 0xff;\n        header[index] = constants_1.OP_QUERY & 0xff;\n        index = index + 4;\n        // Write header information flags\n        header[index + 3] = (flags >> 24) & 0xff;\n        header[index + 2] = (flags >> 16) & 0xff;\n        header[index + 1] = (flags >> 8) & 0xff;\n        header[index] = flags & 0xff;\n        index = index + 4;\n        // Write collection name\n        index = index + header.write(this.ns, index, 'utf8') + 1;\n        header[index - 1] = 0;\n        // Write header information flags numberToSkip\n        header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n        header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n        header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n        header[index] = this.numberToSkip & 0xff;\n        index = index + 4;\n        // Write header information flags numberToReturn\n        header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n        header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n        header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n        header[index] = this.numberToReturn & 0xff;\n        index = index + 4;\n        // Return the buffers\n        return buffers;\n    }\n}\nexports.Query = Query;\n/**************************************************************\n * GETMORE\n **************************************************************/\n/** @internal */\nclass GetMore {\n    constructor(ns, cursorId, opts = {}) {\n        this.numberToReturn = opts.numberToReturn || 0;\n        this.requestId = _requestId++;\n        this.ns = ns;\n        this.cursorId = cursorId;\n    }\n    // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n    toBin() {\n        const length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4;\n        // Create command buffer\n        let index = 0;\n        // Allocate buffer\n        const _buffer = Buffer.alloc(length);\n        // Write header information\n        // index = write32bit(index, _buffer, length);\n        _buffer[index + 3] = (length >> 24) & 0xff;\n        _buffer[index + 2] = (length >> 16) & 0xff;\n        _buffer[index + 1] = (length >> 8) & 0xff;\n        _buffer[index] = length & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, requestId);\n        _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n        _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n        _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n        _buffer[index] = this.requestId & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, 0);\n        _buffer[index + 3] = (0 >> 24) & 0xff;\n        _buffer[index + 2] = (0 >> 16) & 0xff;\n        _buffer[index + 1] = (0 >> 8) & 0xff;\n        _buffer[index] = 0 & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, OP_GETMORE);\n        _buffer[index + 3] = (constants_1.OP_GETMORE >> 24) & 0xff;\n        _buffer[index + 2] = (constants_1.OP_GETMORE >> 16) & 0xff;\n        _buffer[index + 1] = (constants_1.OP_GETMORE >> 8) & 0xff;\n        _buffer[index] = constants_1.OP_GETMORE & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, 0);\n        _buffer[index + 3] = (0 >> 24) & 0xff;\n        _buffer[index + 2] = (0 >> 16) & 0xff;\n        _buffer[index + 1] = (0 >> 8) & 0xff;\n        _buffer[index] = 0 & 0xff;\n        index = index + 4;\n        // Write collection name\n        index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n        _buffer[index - 1] = 0;\n        // Write batch size\n        // index = write32bit(index, _buffer, numberToReturn);\n        _buffer[index + 3] = (this.numberToReturn >> 24) & 0xff;\n        _buffer[index + 2] = (this.numberToReturn >> 16) & 0xff;\n        _buffer[index + 1] = (this.numberToReturn >> 8) & 0xff;\n        _buffer[index] = this.numberToReturn & 0xff;\n        index = index + 4;\n        // Write cursor id\n        // index = write32bit(index, _buffer, cursorId.getLowBits());\n        _buffer[index + 3] = (this.cursorId.getLowBits() >> 24) & 0xff;\n        _buffer[index + 2] = (this.cursorId.getLowBits() >> 16) & 0xff;\n        _buffer[index + 1] = (this.cursorId.getLowBits() >> 8) & 0xff;\n        _buffer[index] = this.cursorId.getLowBits() & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, cursorId.getHighBits());\n        _buffer[index + 3] = (this.cursorId.getHighBits() >> 24) & 0xff;\n        _buffer[index + 2] = (this.cursorId.getHighBits() >> 16) & 0xff;\n        _buffer[index + 1] = (this.cursorId.getHighBits() >> 8) & 0xff;\n        _buffer[index] = this.cursorId.getHighBits() & 0xff;\n        index = index + 4;\n        // Return buffer\n        return [_buffer];\n    }\n}\nexports.GetMore = GetMore;\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\n/** @internal */\nclass KillCursor {\n    constructor(ns, cursorIds) {\n        this.ns = ns;\n        this.requestId = _requestId++;\n        this.cursorIds = cursorIds;\n    }\n    // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n    toBin() {\n        const length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8;\n        // Create command buffer\n        let index = 0;\n        const _buffer = Buffer.alloc(length);\n        // Write header information\n        // index = write32bit(index, _buffer, length);\n        _buffer[index + 3] = (length >> 24) & 0xff;\n        _buffer[index + 2] = (length >> 16) & 0xff;\n        _buffer[index + 1] = (length >> 8) & 0xff;\n        _buffer[index] = length & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, requestId);\n        _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n        _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n        _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n        _buffer[index] = this.requestId & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, 0);\n        _buffer[index + 3] = (0 >> 24) & 0xff;\n        _buffer[index + 2] = (0 >> 16) & 0xff;\n        _buffer[index + 1] = (0 >> 8) & 0xff;\n        _buffer[index] = 0 & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n        _buffer[index + 3] = (constants_1.OP_KILL_CURSORS >> 24) & 0xff;\n        _buffer[index + 2] = (constants_1.OP_KILL_CURSORS >> 16) & 0xff;\n        _buffer[index + 1] = (constants_1.OP_KILL_CURSORS >> 8) & 0xff;\n        _buffer[index] = constants_1.OP_KILL_CURSORS & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, 0);\n        _buffer[index + 3] = (0 >> 24) & 0xff;\n        _buffer[index + 2] = (0 >> 16) & 0xff;\n        _buffer[index + 1] = (0 >> 8) & 0xff;\n        _buffer[index] = 0 & 0xff;\n        index = index + 4;\n        // Write batch size\n        // index = write32bit(index, _buffer, this.cursorIds.length);\n        _buffer[index + 3] = (this.cursorIds.length >> 24) & 0xff;\n        _buffer[index + 2] = (this.cursorIds.length >> 16) & 0xff;\n        _buffer[index + 1] = (this.cursorIds.length >> 8) & 0xff;\n        _buffer[index] = this.cursorIds.length & 0xff;\n        index = index + 4;\n        // Write all the cursor ids into the array\n        for (let i = 0; i < this.cursorIds.length; i++) {\n            // Write cursor id\n            // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n            _buffer[index + 3] = (this.cursorIds[i].getLowBits() >> 24) & 0xff;\n            _buffer[index + 2] = (this.cursorIds[i].getLowBits() >> 16) & 0xff;\n            _buffer[index + 1] = (this.cursorIds[i].getLowBits() >> 8) & 0xff;\n            _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n            index = index + 4;\n            // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n            _buffer[index + 3] = (this.cursorIds[i].getHighBits() >> 24) & 0xff;\n            _buffer[index + 2] = (this.cursorIds[i].getHighBits() >> 16) & 0xff;\n            _buffer[index + 1] = (this.cursorIds[i].getHighBits() >> 8) & 0xff;\n            _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n            index = index + 4;\n        }\n        // Return buffer\n        return [_buffer];\n    }\n}\nexports.KillCursor = KillCursor;\n/** @internal */\nclass Response {\n    constructor(message, msgHeader, msgBody, opts) {\n        this.parsed = false;\n        this.raw = message;\n        this.data = msgBody;\n        this.opts = opts !== null && opts !== void 0 ? opts : {\n            promoteLongs: true,\n            promoteValues: true,\n            promoteBuffers: false,\n            bsonRegExp: false\n        };\n        // Read the message header\n        this.length = msgHeader.length;\n        this.requestId = msgHeader.requestId;\n        this.responseTo = msgHeader.responseTo;\n        this.opCode = msgHeader.opCode;\n        this.fromCompressed = msgHeader.fromCompressed;\n        // Read the message body\n        this.responseFlags = msgBody.readInt32LE(0);\n        this.cursorId = new BSON.Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n        this.startingFrom = msgBody.readInt32LE(12);\n        this.numberReturned = msgBody.readInt32LE(16);\n        // Preallocate document array\n        this.documents = new Array(this.numberReturned);\n        // Flag values\n        this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n        this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n        this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n        this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n        this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n        this.promoteValues =\n            typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n        this.promoteBuffers =\n            typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n        this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n    }\n    isParsed() {\n        return this.parsed;\n    }\n    parse(options) {\n        var _a, _b, _c, _d;\n        // Don't parse again if not needed\n        if (this.parsed)\n            return;\n        options = options !== null && options !== void 0 ? options : {};\n        // Allow the return of raw documents instead of parsing\n        const raw = options.raw || false;\n        const documentsReturnedIn = options.documentsReturnedIn || null;\n        const promoteLongs = (_a = options.promoteLongs) !== null && _a !== void 0 ? _a : this.opts.promoteLongs;\n        const promoteValues = (_b = options.promoteValues) !== null && _b !== void 0 ? _b : this.opts.promoteValues;\n        const promoteBuffers = (_c = options.promoteBuffers) !== null && _c !== void 0 ? _c : this.opts.promoteBuffers;\n        const bsonRegExp = (_d = options.bsonRegExp) !== null && _d !== void 0 ? _d : this.opts.bsonRegExp;\n        let bsonSize;\n        // Set up the options\n        const _options = {\n            promoteLongs,\n            promoteValues,\n            promoteBuffers,\n            bsonRegExp\n        };\n        // Position within OP_REPLY at which documents start\n        // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n        this.index = 20;\n        // Parse Body\n        for (let i = 0; i < this.numberReturned; i++) {\n            bsonSize =\n                this.data[this.index] |\n                    (this.data[this.index + 1] << 8) |\n                    (this.data[this.index + 2] << 16) |\n                    (this.data[this.index + 3] << 24);\n            // If we have raw results specified slice the return document\n            if (raw) {\n                this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n            }\n            else {\n                this.documents[i] = BSON.deserialize(this.data.slice(this.index, this.index + bsonSize), _options);\n            }\n            // Adjust the index\n            this.index = this.index + bsonSize;\n        }\n        if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n            const fieldsAsRaw = {};\n            fieldsAsRaw[documentsReturnedIn] = true;\n            _options.fieldsAsRaw = fieldsAsRaw;\n            const doc = BSON.deserialize(this.documents[0], _options);\n            this.documents = [doc];\n        }\n        // Set parsed\n        this.parsed = true;\n    }\n}\nexports.Response = Response;\n// Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n// Msg Flags\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n/** @internal */\nclass Msg {\n    constructor(ns, command, options) {\n        // Basic options needed to be passed in\n        if (command == null)\n            throw new error_1.MongoInvalidArgumentError('Query document must be specified for query');\n        // Basic options\n        this.ns = ns;\n        this.command = command;\n        this.command.$db = utils_1.databaseNamespace(ns);\n        if (options.readPreference && options.readPreference.mode !== read_preference_1.ReadPreference.PRIMARY) {\n            this.command.$readPreference = options.readPreference.toJSON();\n        }\n        // Ensure empty options\n        this.options = options !== null && options !== void 0 ? options : {};\n        // Additional options\n        this.requestId = options.requestId ? options.requestId : Msg.getRequestId();\n        // Serialization option\n        this.serializeFunctions =\n            typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n        this.ignoreUndefined =\n            typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n        this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n        this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n        // flags\n        this.checksumPresent = false;\n        this.moreToCome = options.moreToCome || false;\n        this.exhaustAllowed =\n            typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n    }\n    toBin() {\n        const buffers = [];\n        let flags = 0;\n        if (this.checksumPresent) {\n            flags |= OPTS_CHECKSUM_PRESENT;\n        }\n        if (this.moreToCome) {\n            flags |= OPTS_MORE_TO_COME;\n        }\n        if (this.exhaustAllowed) {\n            flags |= OPTS_EXHAUST_ALLOWED;\n        }\n        const header = Buffer.alloc(4 * 4 + // Header\n            4 // Flags\n        );\n        buffers.push(header);\n        let totalLength = header.length;\n        const command = this.command;\n        totalLength += this.makeDocumentSegment(buffers, command);\n        header.writeInt32LE(totalLength, 0); // messageLength\n        header.writeInt32LE(this.requestId, 4); // requestID\n        header.writeInt32LE(0, 8); // responseTo\n        header.writeInt32LE(constants_1.OP_MSG, 12); // opCode\n        header.writeUInt32LE(flags, 16); // flags\n        return buffers;\n    }\n    makeDocumentSegment(buffers, document) {\n        const payloadTypeBuffer = Buffer.alloc(1);\n        payloadTypeBuffer[0] = 0;\n        const documentBuffer = this.serializeBson(document);\n        buffers.push(payloadTypeBuffer);\n        buffers.push(documentBuffer);\n        return payloadTypeBuffer.length + documentBuffer.length;\n    }\n    serializeBson(document) {\n        return BSON.serialize(document, {\n            checkKeys: this.checkKeys,\n            serializeFunctions: this.serializeFunctions,\n            ignoreUndefined: this.ignoreUndefined\n        });\n    }\n    static getRequestId() {\n        _requestId = (_requestId + 1) & 0x7fffffff;\n        return _requestId;\n    }\n}\nexports.Msg = Msg;\n/** @internal */\nclass BinMsg {\n    constructor(message, msgHeader, msgBody, opts) {\n        this.parsed = false;\n        this.raw = message;\n        this.data = msgBody;\n        this.opts = opts !== null && opts !== void 0 ? opts : {\n            promoteLongs: true,\n            promoteValues: true,\n            promoteBuffers: false,\n            bsonRegExp: false\n        };\n        // Read the message header\n        this.length = msgHeader.length;\n        this.requestId = msgHeader.requestId;\n        this.responseTo = msgHeader.responseTo;\n        this.opCode = msgHeader.opCode;\n        this.fromCompressed = msgHeader.fromCompressed;\n        // Read response flags\n        this.responseFlags = msgBody.readInt32LE(0);\n        this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n        this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n        this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n        this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n        this.promoteValues =\n            typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n        this.promoteBuffers =\n            typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n        this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n        this.documents = [];\n    }\n    isParsed() {\n        return this.parsed;\n    }\n    parse(options) {\n        var _a, _b, _c, _d;\n        // Don't parse again if not needed\n        if (this.parsed)\n            return;\n        options = options !== null && options !== void 0 ? options : {};\n        this.index = 4;\n        // Allow the return of raw documents instead of parsing\n        const raw = options.raw || false;\n        const documentsReturnedIn = options.documentsReturnedIn || null;\n        const promoteLongs = (_a = options.promoteLongs) !== null && _a !== void 0 ? _a : this.opts.promoteLongs;\n        const promoteValues = (_b = options.promoteValues) !== null && _b !== void 0 ? _b : this.opts.promoteValues;\n        const promoteBuffers = (_c = options.promoteBuffers) !== null && _c !== void 0 ? _c : this.opts.promoteBuffers;\n        const bsonRegExp = (_d = options.bsonRegExp) !== null && _d !== void 0 ? _d : this.opts.bsonRegExp;\n        // Set up the options\n        const _options = {\n            promoteLongs,\n            promoteValues,\n            promoteBuffers,\n            bsonRegExp\n        };\n        while (this.index < this.data.length) {\n            const payloadType = this.data.readUInt8(this.index++);\n            if (payloadType === 0) {\n                const bsonSize = this.data.readUInt32LE(this.index);\n                const bin = this.data.slice(this.index, this.index + bsonSize);\n                this.documents.push(raw ? bin : BSON.deserialize(bin, _options));\n                this.index += bsonSize;\n            }\n            else if (payloadType === 1) {\n                // It was decided that no driver makes use of payload type 1\n                // TODO(NODE-3483): Replace with MongoDeprecationError\n                throw new error_1.MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n            }\n        }\n        if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n            const fieldsAsRaw = {};\n            fieldsAsRaw[documentsReturnedIn] = true;\n            _options.fieldsAsRaw = fieldsAsRaw;\n            const doc = BSON.deserialize(this.documents[0], _options);\n            this.documents = [doc];\n        }\n        this.parsed = true;\n    }\n}\nexports.BinMsg = BinMsg;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}