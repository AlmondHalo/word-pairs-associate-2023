{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MapReduceOperation = void 0;\n\nconst bson_1 = require(\"../bson\");\n\nconst utils_1 = require(\"../utils\");\n\nconst read_preference_1 = require(\"../read_preference\");\n\nconst command_1 = require(\"./command\");\n\nconst error_1 = require(\"../error\");\n\nconst operation_1 = require(\"./operation\");\n\nconst db_1 = require(\"../db\");\n\nconst exclusionList = ['explain', 'readPreference', 'readConcern', 'session', 'bypassDocumentValidation', 'writeConcern', 'raw', 'fieldsAsRaw', 'promoteLongs', 'promoteValues', 'promoteBuffers', 'bsonRegExp', 'serializeFunctions', 'ignoreUndefined', 'scope' // this option is reformatted thus exclude the original\n];\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n * @internal\n */\n\nclass MapReduceOperation extends command_1.CommandOperation {\n  /**\n   * Constructs a MapReduce operation.\n   *\n   * @param collection - Collection instance.\n   * @param map - The mapping function.\n   * @param reduce - The reduce function.\n   * @param options - Optional settings. See Collection.prototype.mapReduce for a list of options.\n   */\n  constructor(collection, map, reduce, options) {\n    super(collection, options);\n    this.options = options !== null && options !== void 0 ? options : {};\n    this.collection = collection;\n    this.map = map;\n    this.reduce = reduce;\n  }\n\n  execute(server, session, callback) {\n    const coll = this.collection;\n    const map = this.map;\n    const reduce = this.reduce;\n    let options = this.options;\n    const mapCommandHash = {\n      mapReduce: coll.collectionName,\n      map: map,\n      reduce: reduce\n    };\n\n    if (options.scope) {\n      mapCommandHash.scope = processScope(options.scope);\n    } // Add any other options passed in\n\n\n    for (const n in options) {\n      // Only include if not in exclusion list\n      if (exclusionList.indexOf(n) === -1) {\n        mapCommandHash[n] = options[n];\n      }\n    }\n\n    options = Object.assign({}, options); // If we have a read preference and inline is not set as output fail hard\n\n    if (this.readPreference.mode === read_preference_1.ReadPreferenceMode.primary && options.out && options.out.inline !== 1 && options.out !== 'inline') {\n      // Force readPreference to primary\n      options.readPreference = read_preference_1.ReadPreference.primary; // Decorate command with writeConcern if supported\n\n      utils_1.applyWriteConcern(mapCommandHash, {\n        db: coll.s.db,\n        collection: coll\n      }, options);\n    } else {\n      utils_1.decorateWithReadConcern(mapCommandHash, coll, options);\n    } // Is bypassDocumentValidation specified\n\n\n    if (options.bypassDocumentValidation === true) {\n      mapCommandHash.bypassDocumentValidation = options.bypassDocumentValidation;\n    } // Have we specified collation\n\n\n    try {\n      utils_1.decorateWithCollation(mapCommandHash, coll, options);\n    } catch (err) {\n      return callback(err);\n    }\n\n    if (this.explain && utils_1.maxWireVersion(server) < 9) {\n      callback(new error_1.MongoCompatibilityError(`Server ${server.name} does not support explain on mapReduce`));\n      return;\n    } // Execute command\n\n\n    super.executeCommand(server, session, mapCommandHash, (err, result) => {\n      if (err) return callback(err); // Check if we have an error\n\n      if (1 !== result.ok || result.err || result.errmsg) {\n        return callback(new error_1.MongoServerError(result));\n      } // If an explain option was executed, don't process the server results\n\n\n      if (this.explain) return callback(undefined, result); // Create statistics value\n\n      const stats = {};\n      if (result.timeMillis) stats['processtime'] = result.timeMillis;\n      if (result.counts) stats['counts'] = result.counts;\n      if (result.timing) stats['timing'] = result.timing; // invoked with inline?\n\n      if (result.results) {\n        // If we wish for no verbosity\n        if (options['verbose'] == null || !options['verbose']) {\n          return callback(undefined, result.results);\n        }\n\n        return callback(undefined, {\n          results: result.results,\n          stats: stats\n        });\n      } // The returned collection\n\n\n      let collection = null; // If we have an object it's a different db\n\n      if (result.result != null && typeof result.result === 'object') {\n        const doc = result.result; // Return a collection from another db\n\n        collection = new db_1.Db(coll.s.db.s.client, doc.db, coll.s.db.s.options).collection(doc.collection);\n      } else {\n        // Create a collection object that wraps the result collection\n        collection = coll.s.db.collection(result.result);\n      } // If we wish for no verbosity\n\n\n      if (options['verbose'] == null || !options['verbose']) {\n        return callback(err, collection);\n      } // Return stats as third set of values\n\n\n      callback(err, {\n        collection,\n        stats\n      });\n    });\n  }\n\n}\n\nexports.MapReduceOperation = MapReduceOperation;\n/** Functions that are passed as scope args must be converted to Code instances. */\n\nfunction processScope(scope) {\n  if (!utils_1.isObject(scope) || scope._bsontype === 'ObjectID') {\n    return scope;\n  }\n\n  const newScope = {};\n\n  for (const key of Object.keys(scope)) {\n    if ('function' === typeof scope[key]) {\n      newScope[key] = new bson_1.Code(String(scope[key]));\n    } else if (scope[key]._bsontype === 'Code') {\n      newScope[key] = scope[key];\n    } else {\n      newScope[key] = processScope(scope[key]);\n    }\n  }\n\n  return newScope;\n}\n\noperation_1.defineAspects(MapReduceOperation, [operation_1.Aspect.EXPLAINABLE]);","map":{"version":3,"names":["Object","defineProperty","exports","value","MapReduceOperation","bson_1","require","utils_1","read_preference_1","command_1","error_1","operation_1","db_1","exclusionList","CommandOperation","constructor","collection","map","reduce","options","execute","server","session","callback","coll","mapCommandHash","mapReduce","collectionName","scope","processScope","n","indexOf","assign","readPreference","mode","ReadPreferenceMode","primary","out","inline","ReadPreference","applyWriteConcern","db","s","decorateWithReadConcern","bypassDocumentValidation","decorateWithCollation","err","explain","maxWireVersion","MongoCompatibilityError","name","executeCommand","result","ok","errmsg","MongoServerError","undefined","stats","timeMillis","counts","timing","results","doc","Db","client","isObject","_bsontype","newScope","key","keys","Code","String","defineAspects","Aspect","EXPLAINABLE"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/operations/map_reduce.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MapReduceOperation = void 0;\nconst bson_1 = require(\"../bson\");\nconst utils_1 = require(\"../utils\");\nconst read_preference_1 = require(\"../read_preference\");\nconst command_1 = require(\"./command\");\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\nconst db_1 = require(\"../db\");\nconst exclusionList = [\n    'explain',\n    'readPreference',\n    'readConcern',\n    'session',\n    'bypassDocumentValidation',\n    'writeConcern',\n    'raw',\n    'fieldsAsRaw',\n    'promoteLongs',\n    'promoteValues',\n    'promoteBuffers',\n    'bsonRegExp',\n    'serializeFunctions',\n    'ignoreUndefined',\n    'scope' // this option is reformatted thus exclude the original\n];\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n * @internal\n */\nclass MapReduceOperation extends command_1.CommandOperation {\n    /**\n     * Constructs a MapReduce operation.\n     *\n     * @param collection - Collection instance.\n     * @param map - The mapping function.\n     * @param reduce - The reduce function.\n     * @param options - Optional settings. See Collection.prototype.mapReduce for a list of options.\n     */\n    constructor(collection, map, reduce, options) {\n        super(collection, options);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.collection = collection;\n        this.map = map;\n        this.reduce = reduce;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        const map = this.map;\n        const reduce = this.reduce;\n        let options = this.options;\n        const mapCommandHash = {\n            mapReduce: coll.collectionName,\n            map: map,\n            reduce: reduce\n        };\n        if (options.scope) {\n            mapCommandHash.scope = processScope(options.scope);\n        }\n        // Add any other options passed in\n        for (const n in options) {\n            // Only include if not in exclusion list\n            if (exclusionList.indexOf(n) === -1) {\n                mapCommandHash[n] = options[n];\n            }\n        }\n        options = Object.assign({}, options);\n        // If we have a read preference and inline is not set as output fail hard\n        if (this.readPreference.mode === read_preference_1.ReadPreferenceMode.primary &&\n            options.out &&\n            options.out.inline !== 1 &&\n            options.out !== 'inline') {\n            // Force readPreference to primary\n            options.readPreference = read_preference_1.ReadPreference.primary;\n            // Decorate command with writeConcern if supported\n            utils_1.applyWriteConcern(mapCommandHash, { db: coll.s.db, collection: coll }, options);\n        }\n        else {\n            utils_1.decorateWithReadConcern(mapCommandHash, coll, options);\n        }\n        // Is bypassDocumentValidation specified\n        if (options.bypassDocumentValidation === true) {\n            mapCommandHash.bypassDocumentValidation = options.bypassDocumentValidation;\n        }\n        // Have we specified collation\n        try {\n            utils_1.decorateWithCollation(mapCommandHash, coll, options);\n        }\n        catch (err) {\n            return callback(err);\n        }\n        if (this.explain && utils_1.maxWireVersion(server) < 9) {\n            callback(new error_1.MongoCompatibilityError(`Server ${server.name} does not support explain on mapReduce`));\n            return;\n        }\n        // Execute command\n        super.executeCommand(server, session, mapCommandHash, (err, result) => {\n            if (err)\n                return callback(err);\n            // Check if we have an error\n            if (1 !== result.ok || result.err || result.errmsg) {\n                return callback(new error_1.MongoServerError(result));\n            }\n            // If an explain option was executed, don't process the server results\n            if (this.explain)\n                return callback(undefined, result);\n            // Create statistics value\n            const stats = {};\n            if (result.timeMillis)\n                stats['processtime'] = result.timeMillis;\n            if (result.counts)\n                stats['counts'] = result.counts;\n            if (result.timing)\n                stats['timing'] = result.timing;\n            // invoked with inline?\n            if (result.results) {\n                // If we wish for no verbosity\n                if (options['verbose'] == null || !options['verbose']) {\n                    return callback(undefined, result.results);\n                }\n                return callback(undefined, { results: result.results, stats: stats });\n            }\n            // The returned collection\n            let collection = null;\n            // If we have an object it's a different db\n            if (result.result != null && typeof result.result === 'object') {\n                const doc = result.result;\n                // Return a collection from another db\n                collection = new db_1.Db(coll.s.db.s.client, doc.db, coll.s.db.s.options).collection(doc.collection);\n            }\n            else {\n                // Create a collection object that wraps the result collection\n                collection = coll.s.db.collection(result.result);\n            }\n            // If we wish for no verbosity\n            if (options['verbose'] == null || !options['verbose']) {\n                return callback(err, collection);\n            }\n            // Return stats as third set of values\n            callback(err, { collection, stats });\n        });\n    }\n}\nexports.MapReduceOperation = MapReduceOperation;\n/** Functions that are passed as scope args must be converted to Code instances. */\nfunction processScope(scope) {\n    if (!utils_1.isObject(scope) || scope._bsontype === 'ObjectID') {\n        return scope;\n    }\n    const newScope = {};\n    for (const key of Object.keys(scope)) {\n        if ('function' === typeof scope[key]) {\n            newScope[key] = new bson_1.Code(String(scope[key]));\n        }\n        else if (scope[key]._bsontype === 'Code') {\n            newScope[key] = scope[key];\n        }\n        else {\n            newScope[key] = processScope(scope[key]);\n        }\n    }\n    return newScope;\n}\noperation_1.defineAspects(MapReduceOperation, [operation_1.Aspect.EXPLAINABLE]);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}