{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../disable-on-enter.directive\";\nvar global_erroneas = 0;\nvar global_correctas = 0;\nvar wordsOrigin = 0;\nconst win = window;\nvar counter = 0;\nvar countEntrance = 0;\nexport let WordListInputOneComponent = /*#__PURE__*/(() => {\n  class WordListInputOneComponent {\n    constructor(myForm, router, elementRef) {\n      this.myForm = myForm;\n      this.router = router;\n      this.elementRef = elementRef;\n      this.wordsInput = [];\n      this.newData = [];\n      this.global_correctas = 0;\n      this.parentName = '';\n      this.countEntrance = 0;\n      this.totalCount = 0;\n      this.currentAdIndex = -1;\n      this.myWord = '';\n      this.myuserInput = '';\n      this.myuserInputsTest = '';\n      this.correctWord = '';\n      this.errorMessage = '';\n      this.userInputs = '';\n      this.counter = 0;\n    }\n\n    trackByFn(index, item) {\n      return index;\n    }\n\n    ngOnInit() {\n      this.inputForm = this.myForm.group({\n        userInputs: ''\n      });\n    }\n\n    ngOnDestroy() {} //Funtion with condition for different scenarios\n\n\n    onEnter(myWord, myuserInput) {\n      if (myuserInput === '') {\n        this.errorMessage = \"The correct word is \" + myWord;\n        wordsOrigin++;\n        global_erroneas++;\n        console.log(\"words Origin :\", wordsOrigin);\n        console.log(\"global_erroneas :\", global_erroneas);\n        console.log(\"The correct word is \" + myWord);\n      } else if (myuserInput != myWord) {\n        this.errorMessage = \"INCORRECT!, not \" + \"'\" + myuserInput + \"'\" + \", the correct word is \" + myWord;\n        console.log(\"Not \" + myuserInput + \", the correct word is \" + myWord);\n        wordsOrigin++;\n        global_erroneas++;\n        console.log(\"words Origin :\", wordsOrigin);\n        console.log(\"global_erroneas :\", global_erroneas);\n      } else if (myWord === myuserInput) {\n        this.correctWord = \"Correct answer\";\n        wordsOrigin++;\n        global_correctas++;\n        console.log(\"words Origin :\", wordsOrigin);\n        console.log(\"global_correctas:\", global_correctas);\n      }\n\n      this.popSweetAlert();\n    }\n\n    popSweetAlert() {\n      if (wordsOrigin == 43) {\n        if (global_correctas < 26) {\n          // total of 43 words, 60% of 43 is 25.8 (26)\n          var thisComp = this;\n          Swal.fire({\n            text: \"You answered \" + global_correctas + \" out of 43 words, You have some impovements to make\"\n          }).then(function () {\n            countEntrance++;\n            console.log(\"Current counter \", countEntrance);\n\n            if (countEntrance == 26) {\n              win.location = \"pass-test\"; //thisComp.router.navigate(['/pass-test']);\n            } else {\n              //thisComp.resetVariables();\n              win.location = \"input-one\"; //thisComp.router.navigate(['/input-one']);\n            } // win.location = \"input-one\" + \"/?testcount=\" + counter;\n\n          });\n        } else if (global_correctas >= 26) {\n          Swal.fire({\n            text: \"You answered \" + global_correctas + \" out of 40 words, Test completed\"\n          }).then(function () {\n            //thisComp.router.navigate(['/pass-test']);\n            win.location = \"pass-test\";\n          });\n        }\n      }\n    }\n\n  }\n\n  WordListInputOneComponent.ɵfac = function WordListInputOneComponent_Factory(t) {\n    return new (t || WordListInputOneComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  WordListInputOneComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WordListInputOneComponent,\n    selectors: [[\"app-word-list-input-one\"]],\n    inputs: {\n      wordsInput: \"wordsInput\",\n      data: \"data\",\n      newData: \"newData\"\n    },\n    decls: 13,\n    vars: 5,\n    consts: [[1, \"form-match\", 3, \"formGroup\"], [1, \"message\"], [\"disable-on-enter\", \"\", \"id\", \"userInputs\", \"type\", \"text\", \"spellcheck\", \"true\", \"autofocus\", \"autofocus\", \"name\", \"userInputs\", \"autocomplete\", \"off\", 3, \"keyup.enter\", \"click\"], [\"userInputs\", \"\"], [1, \"outputMessage\", 2, \"color\", \"red\", \"text-align\", \"center\", \"font-size\", \"x-large\"], [1, \"correctMessage\", 2, \"color\", \"blue\", \"text-align\", \"center\", \"font-size\", \"x-large\"], [\"for\", \"\"]],\n    template: function WordListInputOneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 2, 3);\n        i0.ɵɵlistener(\"keyup.enter\", function WordListInputOneComponent_Template_input_keyup_enter_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(4);\n\n          return i0.ɵɵresetView(ctx.onEnter(ctx.data.listonesec, _r0.value.toLowerCase()));\n        })(\"click\", function WordListInputOneComponent_Template_input_click_3_listener($event) {\n          return $event.stopPropagation();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"span\", 4)(6, \"div\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"span\", 5)(9, \"div\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"label\", 6);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.inputForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.data.listone, \" - \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.errorMessage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.correctWord);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.data.listonesec);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.DisableOnEnterDirective],\n    encapsulation: 2\n  });\n  return WordListInputOneComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}