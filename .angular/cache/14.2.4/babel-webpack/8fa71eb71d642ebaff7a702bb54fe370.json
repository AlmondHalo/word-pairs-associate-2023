{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommandOperation = void 0;\n\nconst operation_1 = require(\"./operation\");\n\nconst read_concern_1 = require(\"../read_concern\");\n\nconst write_concern_1 = require(\"../write_concern\");\n\nconst utils_1 = require(\"../utils\");\n\nconst sessions_1 = require(\"../sessions\");\n\nconst error_1 = require(\"../error\");\n\nconst explain_1 = require(\"../explain\");\n\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n/** @internal */\n\nclass CommandOperation extends operation_1.AbstractOperation {\n  constructor(parent, options) {\n    super(options);\n    this.options = options !== null && options !== void 0 ? options : {}; // NOTE: this was explicitly added for the add/remove user operations, it's likely\n    //       something we'd want to reconsider. Perhaps those commands can use `Admin`\n    //       as a parent?\n\n    const dbNameOverride = (options === null || options === void 0 ? void 0 : options.dbName) || (options === null || options === void 0 ? void 0 : options.authdb);\n\n    if (dbNameOverride) {\n      this.ns = new utils_1.MongoDBNamespace(dbNameOverride, '$cmd');\n    } else {\n      this.ns = parent ? parent.s.namespace.withCollection('$cmd') : new utils_1.MongoDBNamespace('admin', '$cmd');\n    }\n\n    this.readConcern = read_concern_1.ReadConcern.fromOptions(options);\n    this.writeConcern = write_concern_1.WriteConcern.fromOptions(options); // TODO(NODE-2056): make logger another \"inheritable\" property\n\n    if (parent && parent.logger) {\n      this.logger = parent.logger;\n    }\n\n    if (this.hasAspect(operation_1.Aspect.EXPLAINABLE)) {\n      this.explain = explain_1.Explain.fromOptions(options);\n    } else if ((options === null || options === void 0 ? void 0 : options.explain) != null) {\n      throw new error_1.MongoInvalidArgumentError(`Option \"explain\" is not supported on this command`);\n    }\n  }\n\n  get canRetryWrite() {\n    if (this.hasAspect(operation_1.Aspect.EXPLAINABLE)) {\n      return this.explain == null;\n    }\n\n    return true;\n  }\n\n  executeCommand(server, session, cmd, callback) {\n    // TODO: consider making this a non-enumerable property\n    this.server = server;\n    const options = { ...this.options,\n      ...this.bsonOptions,\n      readPreference: this.readPreference,\n      session\n    };\n    const serverWireVersion = utils_1.maxWireVersion(server);\n    const inTransaction = this.session && this.session.inTransaction();\n\n    if (this.readConcern && sessions_1.commandSupportsReadConcern(cmd) && !inTransaction) {\n      Object.assign(cmd, {\n        readConcern: this.readConcern\n      });\n    }\n\n    if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      callback(new error_1.MongoCompatibilityError(`Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`));\n      return;\n    }\n\n    if (this.writeConcern && this.hasAspect(operation_1.Aspect.WRITE_OPERATION) && !inTransaction) {\n      Object.assign(cmd, {\n        writeConcern: this.writeConcern\n      });\n    }\n\n    if (serverWireVersion >= SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      if (options.collation && typeof options.collation === 'object' && !this.hasAspect(operation_1.Aspect.SKIP_COLLATION)) {\n        Object.assign(cmd, {\n          collation: options.collation\n        });\n      }\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    if (typeof options.comment === 'string') {\n      cmd.comment = options.comment;\n    }\n\n    if (this.hasAspect(operation_1.Aspect.EXPLAINABLE) && this.explain) {\n      if (serverWireVersion < 6 && cmd.aggregate) {\n        // Prior to 3.6, with aggregate, verbosity is ignored, and we must pass in \"explain: true\"\n        cmd.explain = true;\n      } else {\n        cmd = utils_1.decorateWithExplain(cmd, this.explain);\n      }\n    }\n\n    server.command(this.ns, cmd, options, callback);\n  }\n\n}\n\nexports.CommandOperation = CommandOperation;","map":{"version":3,"names":["Object","defineProperty","exports","value","CommandOperation","operation_1","require","read_concern_1","write_concern_1","utils_1","sessions_1","error_1","explain_1","SUPPORTS_WRITE_CONCERN_AND_COLLATION","AbstractOperation","constructor","parent","options","dbNameOverride","dbName","authdb","ns","MongoDBNamespace","s","namespace","withCollection","readConcern","ReadConcern","fromOptions","writeConcern","WriteConcern","logger","hasAspect","Aspect","EXPLAINABLE","explain","Explain","MongoInvalidArgumentError","canRetryWrite","executeCommand","server","session","cmd","callback","bsonOptions","readPreference","serverWireVersion","maxWireVersion","inTransaction","commandSupportsReadConcern","assign","collation","MongoCompatibilityError","name","WRITE_OPERATION","SKIP_COLLATION","maxTimeMS","comment","aggregate","decorateWithExplain","command"],"sources":["/Users/yoannesfigueiras/node_modules/mongodb/lib/operations/command.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandOperation = void 0;\nconst operation_1 = require(\"./operation\");\nconst read_concern_1 = require(\"../read_concern\");\nconst write_concern_1 = require(\"../write_concern\");\nconst utils_1 = require(\"../utils\");\nconst sessions_1 = require(\"../sessions\");\nconst error_1 = require(\"../error\");\nconst explain_1 = require(\"../explain\");\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n/** @internal */\nclass CommandOperation extends operation_1.AbstractOperation {\n    constructor(parent, options) {\n        super(options);\n        this.options = options !== null && options !== void 0 ? options : {};\n        // NOTE: this was explicitly added for the add/remove user operations, it's likely\n        //       something we'd want to reconsider. Perhaps those commands can use `Admin`\n        //       as a parent?\n        const dbNameOverride = (options === null || options === void 0 ? void 0 : options.dbName) || (options === null || options === void 0 ? void 0 : options.authdb);\n        if (dbNameOverride) {\n            this.ns = new utils_1.MongoDBNamespace(dbNameOverride, '$cmd');\n        }\n        else {\n            this.ns = parent\n                ? parent.s.namespace.withCollection('$cmd')\n                : new utils_1.MongoDBNamespace('admin', '$cmd');\n        }\n        this.readConcern = read_concern_1.ReadConcern.fromOptions(options);\n        this.writeConcern = write_concern_1.WriteConcern.fromOptions(options);\n        // TODO(NODE-2056): make logger another \"inheritable\" property\n        if (parent && parent.logger) {\n            this.logger = parent.logger;\n        }\n        if (this.hasAspect(operation_1.Aspect.EXPLAINABLE)) {\n            this.explain = explain_1.Explain.fromOptions(options);\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.explain) != null) {\n            throw new error_1.MongoInvalidArgumentError(`Option \"explain\" is not supported on this command`);\n        }\n    }\n    get canRetryWrite() {\n        if (this.hasAspect(operation_1.Aspect.EXPLAINABLE)) {\n            return this.explain == null;\n        }\n        return true;\n    }\n    executeCommand(server, session, cmd, callback) {\n        // TODO: consider making this a non-enumerable property\n        this.server = server;\n        const options = {\n            ...this.options,\n            ...this.bsonOptions,\n            readPreference: this.readPreference,\n            session\n        };\n        const serverWireVersion = utils_1.maxWireVersion(server);\n        const inTransaction = this.session && this.session.inTransaction();\n        if (this.readConcern && sessions_1.commandSupportsReadConcern(cmd) && !inTransaction) {\n            Object.assign(cmd, { readConcern: this.readConcern });\n        }\n        if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n            callback(new error_1.MongoCompatibilityError(`Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`));\n            return;\n        }\n        if (this.writeConcern && this.hasAspect(operation_1.Aspect.WRITE_OPERATION) && !inTransaction) {\n            Object.assign(cmd, { writeConcern: this.writeConcern });\n        }\n        if (serverWireVersion >= SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n            if (options.collation &&\n                typeof options.collation === 'object' &&\n                !this.hasAspect(operation_1.Aspect.SKIP_COLLATION)) {\n                Object.assign(cmd, { collation: options.collation });\n            }\n        }\n        if (typeof options.maxTimeMS === 'number') {\n            cmd.maxTimeMS = options.maxTimeMS;\n        }\n        if (typeof options.comment === 'string') {\n            cmd.comment = options.comment;\n        }\n        if (this.hasAspect(operation_1.Aspect.EXPLAINABLE) && this.explain) {\n            if (serverWireVersion < 6 && cmd.aggregate) {\n                // Prior to 3.6, with aggregate, verbosity is ignored, and we must pass in \"explain: true\"\n                cmd.explain = true;\n            }\n            else {\n                cmd = utils_1.decorateWithExplain(cmd, this.explain);\n            }\n        }\n        server.command(this.ns, cmd, options, callback);\n    }\n}\nexports.CommandOperation = CommandOperation;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}